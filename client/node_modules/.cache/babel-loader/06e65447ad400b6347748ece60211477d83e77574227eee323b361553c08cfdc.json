{"ast":null,"code":"import { AuthenticateWithRedirectCallback, ClerkDegraded, ClerkFailed, ClerkLoaded, ClerkLoading, Protect, RedirectToCreateOrganization, RedirectToOrganizationProfile, RedirectToSignIn, RedirectToSignUp, RedirectToUserProfile, SignedIn, SignedOut } from \"./chunk-Y2PJFKKW.mjs\";\nimport { APIKeys, CreateOrganization, GoogleOneTap, OrganizationList, OrganizationProfile, OrganizationSwitcher, PricingTable, SignIn, SignUp, UserButton, UserProfile, Waitlist, assertSingleChild, isConstructor, normalizeWithDefaultValue, safeExecute, withMaxAllowedInstancesGuard } from \"./chunk-KY3U4F4H.mjs\";\nimport { AuthContext, IsomorphicClerkContext, __experimental_CheckoutProvider, __experimental_PaymentElement, __experimental_PaymentElementProvider, __experimental_useCheckout, __experimental_usePaymentElement, errorThrower, multipleClerkProvidersError, setErrorThrowerOptions, unsupportedNonBrowserDomainOrProxyUrlFunction, useAuth, useClerk, useEmailLink, useOrganization, useOrganizationList, useReverification, useSession, useSessionList, useSignIn, useSignUp, useUser, withClerk } from \"./chunk-U7L7TR5J.mjs\";\nimport { __privateAdd, __privateGet, __privateMethod, __privateSet } from \"./chunk-OANWQR3B.mjs\";\n\n// src/polyfills.ts\nif (typeof window !== \"undefined\" && !window.global) {\n  window.global = typeof global === \"undefined\" ? window : global;\n}\n\n// src/index.ts\nimport { setClerkJsLoadingErrorPackageName } from \"@clerk/shared/loadClerkJsScript\";\n\n// src/components/SignInButton.tsx\nimport React from \"react\";\nvar SignInButton = withClerk(({\n  clerk,\n  children,\n  ...props\n}) => {\n  const {\n    signUpFallbackRedirectUrl,\n    forceRedirectUrl,\n    fallbackRedirectUrl,\n    signUpForceRedirectUrl,\n    mode,\n    initialValues,\n    withSignUp,\n    oauthFlow,\n    ...rest\n  } = props;\n  children = normalizeWithDefaultValue(children, \"Sign in\");\n  const child = assertSingleChild(children)(\"SignInButton\");\n  const clickHandler = () => {\n    const opts = {\n      forceRedirectUrl,\n      fallbackRedirectUrl,\n      signUpFallbackRedirectUrl,\n      signUpForceRedirectUrl,\n      initialValues,\n      withSignUp,\n      oauthFlow\n    };\n    if (mode === \"modal\") {\n      return clerk.openSignIn({\n        ...opts,\n        appearance: props.appearance\n      });\n    }\n    return clerk.redirectToSignIn({\n      ...opts,\n      signInFallbackRedirectUrl: fallbackRedirectUrl,\n      signInForceRedirectUrl: forceRedirectUrl\n    });\n  };\n  const wrappedChildClickHandler = async e => {\n    if (child && typeof child === \"object\" && \"props\" in child) {\n      await safeExecute(child.props.onClick)(e);\n    }\n    return clickHandler();\n  };\n  const childProps = {\n    ...rest,\n    onClick: wrappedChildClickHandler\n  };\n  return React.cloneElement(child, childProps);\n}, {\n  component: \"SignInButton\",\n  renderWhileLoading: true\n});\n\n// src/components/SignUpButton.tsx\nimport React2 from \"react\";\nvar SignUpButton = withClerk(({\n  clerk,\n  children,\n  ...props\n}) => {\n  const {\n    fallbackRedirectUrl,\n    forceRedirectUrl,\n    signInFallbackRedirectUrl,\n    signInForceRedirectUrl,\n    mode,\n    initialValues,\n    oauthFlow,\n    ...rest\n  } = props;\n  children = normalizeWithDefaultValue(children, \"Sign up\");\n  const child = assertSingleChild(children)(\"SignUpButton\");\n  const clickHandler = () => {\n    const opts = {\n      fallbackRedirectUrl,\n      forceRedirectUrl,\n      signInFallbackRedirectUrl,\n      signInForceRedirectUrl,\n      initialValues,\n      oauthFlow\n    };\n    if (mode === \"modal\") {\n      return clerk.openSignUp({\n        ...opts,\n        appearance: props.appearance,\n        unsafeMetadata: props.unsafeMetadata\n      });\n    }\n    return clerk.redirectToSignUp({\n      ...opts,\n      signUpFallbackRedirectUrl: fallbackRedirectUrl,\n      signUpForceRedirectUrl: forceRedirectUrl\n    });\n  };\n  const wrappedChildClickHandler = async e => {\n    if (child && typeof child === \"object\" && \"props\" in child) {\n      await safeExecute(child.props.onClick)(e);\n    }\n    return clickHandler();\n  };\n  const childProps = {\n    ...rest,\n    onClick: wrappedChildClickHandler\n  };\n  return React2.cloneElement(child, childProps);\n}, {\n  component: \"SignUpButton\",\n  renderWhileLoading: true\n});\n\n// src/components/SignOutButton.tsx\nimport React3 from \"react\";\nvar SignOutButton = withClerk(({\n  clerk,\n  children,\n  ...props\n}) => {\n  const {\n    redirectUrl = \"/\",\n    signOutOptions,\n    ...rest\n  } = props;\n  children = normalizeWithDefaultValue(children, \"Sign out\");\n  const child = assertSingleChild(children)(\"SignOutButton\");\n  const clickHandler = () => clerk.signOut({\n    redirectUrl,\n    ...signOutOptions\n  });\n  const wrappedChildClickHandler = async e => {\n    await safeExecute(child.props.onClick)(e);\n    return clickHandler();\n  };\n  const childProps = {\n    ...rest,\n    onClick: wrappedChildClickHandler\n  };\n  return React3.cloneElement(child, childProps);\n}, {\n  component: \"SignOutButton\",\n  renderWhileLoading: true\n});\n\n// src/components/SignInWithMetamaskButton.tsx\nimport React4 from \"react\";\nvar SignInWithMetamaskButton = withClerk(({\n  clerk,\n  children,\n  ...props\n}) => {\n  const {\n    redirectUrl,\n    ...rest\n  } = props;\n  children = normalizeWithDefaultValue(children, \"Sign in with Metamask\");\n  const child = assertSingleChild(children)(\"SignInWithMetamaskButton\");\n  const clickHandler = async () => {\n    async function authenticate() {\n      await clerk.authenticateWithMetamask({\n        redirectUrl: redirectUrl || void 0\n      });\n    }\n    void authenticate();\n  };\n  const wrappedChildClickHandler = async e => {\n    await safeExecute(child.props.onClick)(e);\n    return clickHandler();\n  };\n  const childProps = {\n    ...rest,\n    onClick: wrappedChildClickHandler\n  };\n  return React4.cloneElement(child, childProps);\n}, {\n  component: \"SignInWithMetamask\",\n  renderWhileLoading: true\n});\n\n// src/contexts/ClerkProvider.tsx\nimport { isPublishableKey } from \"@clerk/shared/keys\";\nimport React6 from \"react\";\n\n// src/contexts/ClerkContextProvider.tsx\nimport { deriveState } from \"@clerk/shared/deriveState\";\nimport { __experimental_CheckoutProvider as CheckoutProvider, ClientContext, OrganizationProvider, SessionContext, UserContext } from \"@clerk/shared/react\";\nimport React5 from \"react\";\n\n// src/isomorphicClerk.ts\nimport { inBrowser } from \"@clerk/shared/browser\";\nimport { clerkEvents, createClerkEventBus } from \"@clerk/shared/clerkEventBus\";\nimport { loadClerkJsScript } from \"@clerk/shared/loadClerkJsScript\";\nimport { handleValueOrFn } from \"@clerk/shared/utils\";\nif (typeof globalThis.__BUILD_DISABLE_RHC__ === \"undefined\") {\n  globalThis.__BUILD_DISABLE_RHC__ = false;\n}\nvar SDK_METADATA = {\n  name: \"@clerk/clerk-react\",\n  version: \"5.36.0\",\n  environment: process.env.NODE_ENV\n};\nvar _status, _domain, _proxyUrl, _publishableKey, _eventBus, _instance, _IsomorphicClerk_instances, waitForClerkJS_fn;\nvar _IsomorphicClerk = class _IsomorphicClerk {\n  constructor(options) {\n    __privateAdd(this, _IsomorphicClerk_instances);\n    this.clerkjs = null;\n    this.preopenOneTap = null;\n    this.preopenUserVerification = null;\n    this.preopenSignIn = null;\n    this.preopenCheckout = null;\n    this.preopenPlanDetails = null;\n    this.preopenSubscriptionDetails = null;\n    this.preopenSignUp = null;\n    this.preopenUserProfile = null;\n    this.preopenOrganizationProfile = null;\n    this.preopenCreateOrganization = null;\n    this.preOpenWaitlist = null;\n    this.premountSignInNodes = /* @__PURE__ */new Map();\n    this.premountSignUpNodes = /* @__PURE__ */new Map();\n    this.premountUserProfileNodes = /* @__PURE__ */new Map();\n    this.premountUserButtonNodes = /* @__PURE__ */new Map();\n    this.premountOrganizationProfileNodes = /* @__PURE__ */new Map();\n    this.premountCreateOrganizationNodes = /* @__PURE__ */new Map();\n    this.premountOrganizationSwitcherNodes = /* @__PURE__ */new Map();\n    this.premountOrganizationListNodes = /* @__PURE__ */new Map();\n    this.premountMethodCalls = /* @__PURE__ */new Map();\n    this.premountWaitlistNodes = /* @__PURE__ */new Map();\n    this.premountPricingTableNodes = /* @__PURE__ */new Map();\n    this.premountApiKeysNodes = /* @__PURE__ */new Map();\n    this.premountOAuthConsentNodes = /* @__PURE__ */new Map();\n    // A separate Map of `addListener` method calls to handle multiple listeners.\n    this.premountAddListenerCalls = /* @__PURE__ */new Map();\n    this.loadedListeners = [];\n    __privateAdd(this, _status, \"loading\");\n    __privateAdd(this, _domain);\n    __privateAdd(this, _proxyUrl);\n    __privateAdd(this, _publishableKey);\n    __privateAdd(this, _eventBus, createClerkEventBus());\n    this.buildSignInUrl = opts => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildSignInUrl(opts)) || \"\";\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildSignInUrl\", callback);\n      }\n    };\n    this.buildSignUpUrl = opts => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildSignUpUrl(opts)) || \"\";\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildSignUpUrl\", callback);\n      }\n    };\n    this.buildAfterSignInUrl = (...args) => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildAfterSignInUrl(...args)) || \"\";\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildAfterSignInUrl\", callback);\n      }\n    };\n    this.buildAfterSignUpUrl = (...args) => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildAfterSignUpUrl(...args)) || \"\";\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildAfterSignUpUrl\", callback);\n      }\n    };\n    this.buildAfterSignOutUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildAfterSignOutUrl()) || \"\";\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildAfterSignOutUrl\", callback);\n      }\n    };\n    this.buildNewSubscriptionRedirectUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildNewSubscriptionRedirectUrl()) || \"\";\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildNewSubscriptionRedirectUrl\", callback);\n      }\n    };\n    this.buildAfterMultiSessionSingleSignOutUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildAfterMultiSessionSingleSignOutUrl()) || \"\";\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildAfterMultiSessionSingleSignOutUrl\", callback);\n      }\n    };\n    this.buildUserProfileUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildUserProfileUrl()) || \"\";\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildUserProfileUrl\", callback);\n      }\n    };\n    this.buildCreateOrganizationUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildCreateOrganizationUrl()) || \"\";\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildCreateOrganizationUrl\", callback);\n      }\n    };\n    this.buildOrganizationProfileUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildOrganizationProfileUrl()) || \"\";\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildOrganizationProfileUrl\", callback);\n      }\n    };\n    this.buildWaitlistUrl = () => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildWaitlistUrl()) || \"\";\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildWaitlistUrl\", callback);\n      }\n    };\n    this.buildUrlWithAuth = to => {\n      const callback = () => {\n        var _a;\n        return ((_a = this.clerkjs) == null ? void 0 : _a.buildUrlWithAuth(to)) || \"\";\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"buildUrlWithAuth\", callback);\n      }\n    };\n    this.handleUnauthenticated = async () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.handleUnauthenticated();\n      };\n      if (this.clerkjs && this.loaded) {\n        void callback();\n      } else {\n        this.premountMethodCalls.set(\"handleUnauthenticated\", callback);\n      }\n    };\n    this.on = (...args) => {\n      var _a;\n      if ((_a = this.clerkjs) == null ? void 0 : _a.on) {\n        return this.clerkjs.on(...args);\n      } else {\n        __privateGet(this, _eventBus).on(...args);\n      }\n    };\n    this.off = (...args) => {\n      var _a;\n      if ((_a = this.clerkjs) == null ? void 0 : _a.off) {\n        return this.clerkjs.off(...args);\n      } else {\n        __privateGet(this, _eventBus).off(...args);\n      }\n    };\n    /**\n     * @deprecated Please use `addStatusListener`. This api will be removed in the next major.\n     */\n    this.addOnLoaded = cb => {\n      this.loadedListeners.push(cb);\n      if (this.loaded) {\n        this.emitLoaded();\n      }\n    };\n    /**\n     * @deprecated Please use `__internal_setStatus`. This api will be removed in the next major.\n     */\n    this.emitLoaded = () => {\n      this.loadedListeners.forEach(cb => cb());\n      this.loadedListeners = [];\n    };\n    this.beforeLoad = clerkjs => {\n      if (!clerkjs) {\n        throw new Error(\"Failed to hydrate latest Clerk JS\");\n      }\n    };\n    this.hydrateClerkJS = clerkjs => {\n      var _a;\n      if (!clerkjs) {\n        throw new Error(\"Failed to hydrate latest Clerk JS\");\n      }\n      this.clerkjs = clerkjs;\n      this.premountMethodCalls.forEach(cb => cb());\n      this.premountAddListenerCalls.forEach((listenerHandlers, listener) => {\n        listenerHandlers.nativeUnsubscribe = clerkjs.addListener(listener);\n      });\n      (_a = __privateGet(this, _eventBus).internal.retrieveListeners(\"status\")) == null ? void 0 : _a.forEach(listener => {\n        this.on(\"status\", listener, {\n          notify: true\n        });\n      });\n      if (this.preopenSignIn !== null) {\n        clerkjs.openSignIn(this.preopenSignIn);\n      }\n      if (this.preopenCheckout !== null) {\n        clerkjs.__internal_openCheckout(this.preopenCheckout);\n      }\n      if (this.preopenPlanDetails !== null) {\n        clerkjs.__internal_openPlanDetails(this.preopenPlanDetails);\n      }\n      if (this.preopenSubscriptionDetails !== null) {\n        clerkjs.__internal_openSubscriptionDetails(this.preopenSubscriptionDetails);\n      }\n      if (this.preopenSignUp !== null) {\n        clerkjs.openSignUp(this.preopenSignUp);\n      }\n      if (this.preopenUserProfile !== null) {\n        clerkjs.openUserProfile(this.preopenUserProfile);\n      }\n      if (this.preopenUserVerification !== null) {\n        clerkjs.__internal_openReverification(this.preopenUserVerification);\n      }\n      if (this.preopenOneTap !== null) {\n        clerkjs.openGoogleOneTap(this.preopenOneTap);\n      }\n      if (this.preopenOrganizationProfile !== null) {\n        clerkjs.openOrganizationProfile(this.preopenOrganizationProfile);\n      }\n      if (this.preopenCreateOrganization !== null) {\n        clerkjs.openCreateOrganization(this.preopenCreateOrganization);\n      }\n      if (this.preOpenWaitlist !== null) {\n        clerkjs.openWaitlist(this.preOpenWaitlist);\n      }\n      this.premountSignInNodes.forEach((props, node) => {\n        clerkjs.mountSignIn(node, props);\n      });\n      this.premountSignUpNodes.forEach((props, node) => {\n        clerkjs.mountSignUp(node, props);\n      });\n      this.premountUserProfileNodes.forEach((props, node) => {\n        clerkjs.mountUserProfile(node, props);\n      });\n      this.premountUserButtonNodes.forEach((props, node) => {\n        clerkjs.mountUserButton(node, props);\n      });\n      this.premountOrganizationListNodes.forEach((props, node) => {\n        clerkjs.mountOrganizationList(node, props);\n      });\n      this.premountWaitlistNodes.forEach((props, node) => {\n        clerkjs.mountWaitlist(node, props);\n      });\n      this.premountPricingTableNodes.forEach((props, node) => {\n        clerkjs.mountPricingTable(node, props);\n      });\n      this.premountApiKeysNodes.forEach((props, node) => {\n        clerkjs.mountApiKeys(node, props);\n      });\n      this.premountOAuthConsentNodes.forEach((props, node) => {\n        clerkjs.__internal_mountOAuthConsent(node, props);\n      });\n      if (typeof this.clerkjs.status === \"undefined\") {\n        __privateGet(this, _eventBus).emit(clerkEvents.Status, \"ready\");\n      }\n      this.emitLoaded();\n      return this.clerkjs;\n    };\n    this.__experimental_checkout = (...args) => {\n      var _a;\n      return (_a = this.clerkjs) == null ? void 0 : _a.__experimental_checkout(...args);\n    };\n    this.__unstable__updateProps = async props => {\n      const clerkjs = await __privateMethod(this, _IsomorphicClerk_instances, waitForClerkJS_fn).call(this);\n      if (clerkjs && \"__unstable__updateProps\" in clerkjs) {\n        return clerkjs.__unstable__updateProps(props);\n      }\n    };\n    this.__internal_navigateToTaskIfAvailable = async params => {\n      if (this.clerkjs) {\n        return this.clerkjs.__internal_navigateToTaskIfAvailable(params);\n      } else {\n        return Promise.reject();\n      }\n    };\n    /**\n     * `setActive` can be used to set the active session and/or organization.\n     */\n    this.setActive = params => {\n      if (this.clerkjs) {\n        return this.clerkjs.setActive(params);\n      } else {\n        return Promise.reject();\n      }\n    };\n    this.openSignIn = props => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.openSignIn(props);\n      } else {\n        this.preopenSignIn = props;\n      }\n    };\n    this.closeSignIn = () => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.closeSignIn();\n      } else {\n        this.preopenSignIn = null;\n      }\n    };\n    this.__internal_openCheckout = props => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.__internal_openCheckout(props);\n      } else {\n        this.preopenCheckout = props;\n      }\n    };\n    this.__internal_closeCheckout = () => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.__internal_closeCheckout();\n      } else {\n        this.preopenCheckout = null;\n      }\n    };\n    this.__internal_openPlanDetails = props => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.__internal_openPlanDetails(props);\n      } else {\n        this.preopenPlanDetails = props;\n      }\n    };\n    this.__internal_closePlanDetails = () => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.__internal_closePlanDetails();\n      } else {\n        this.preopenPlanDetails = null;\n      }\n    };\n    this.__internal_openSubscriptionDetails = props => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.__internal_openSubscriptionDetails(props);\n      } else {\n        this.preopenSubscriptionDetails = props != null ? props : null;\n      }\n    };\n    this.__internal_closeSubscriptionDetails = () => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.__internal_closeSubscriptionDetails();\n      } else {\n        this.preopenSubscriptionDetails = null;\n      }\n    };\n    this.__internal_openReverification = props => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.__internal_openReverification(props);\n      } else {\n        this.preopenUserVerification = props;\n      }\n    };\n    this.__internal_closeReverification = () => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.__internal_closeReverification();\n      } else {\n        this.preopenUserVerification = null;\n      }\n    };\n    this.openGoogleOneTap = props => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.openGoogleOneTap(props);\n      } else {\n        this.preopenOneTap = props;\n      }\n    };\n    this.closeGoogleOneTap = () => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.closeGoogleOneTap();\n      } else {\n        this.preopenOneTap = null;\n      }\n    };\n    this.openUserProfile = props => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.openUserProfile(props);\n      } else {\n        this.preopenUserProfile = props;\n      }\n    };\n    this.closeUserProfile = () => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.closeUserProfile();\n      } else {\n        this.preopenUserProfile = null;\n      }\n    };\n    this.openOrganizationProfile = props => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.openOrganizationProfile(props);\n      } else {\n        this.preopenOrganizationProfile = props;\n      }\n    };\n    this.closeOrganizationProfile = () => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.closeOrganizationProfile();\n      } else {\n        this.preopenOrganizationProfile = null;\n      }\n    };\n    this.openCreateOrganization = props => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.openCreateOrganization(props);\n      } else {\n        this.preopenCreateOrganization = props;\n      }\n    };\n    this.closeCreateOrganization = () => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.closeCreateOrganization();\n      } else {\n        this.preopenCreateOrganization = null;\n      }\n    };\n    this.openWaitlist = props => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.openWaitlist(props);\n      } else {\n        this.preOpenWaitlist = props;\n      }\n    };\n    this.closeWaitlist = () => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.closeWaitlist();\n      } else {\n        this.preOpenWaitlist = null;\n      }\n    };\n    this.openSignUp = props => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.openSignUp(props);\n      } else {\n        this.preopenSignUp = props;\n      }\n    };\n    this.closeSignUp = () => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.closeSignUp();\n      } else {\n        this.preopenSignUp = null;\n      }\n    };\n    this.mountSignIn = (node, props) => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.mountSignIn(node, props);\n      } else {\n        this.premountSignInNodes.set(node, props);\n      }\n    };\n    this.unmountSignIn = node => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.unmountSignIn(node);\n      } else {\n        this.premountSignInNodes.delete(node);\n      }\n    };\n    this.mountSignUp = (node, props) => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.mountSignUp(node, props);\n      } else {\n        this.premountSignUpNodes.set(node, props);\n      }\n    };\n    this.unmountSignUp = node => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.unmountSignUp(node);\n      } else {\n        this.premountSignUpNodes.delete(node);\n      }\n    };\n    this.mountUserProfile = (node, props) => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.mountUserProfile(node, props);\n      } else {\n        this.premountUserProfileNodes.set(node, props);\n      }\n    };\n    this.unmountUserProfile = node => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.unmountUserProfile(node);\n      } else {\n        this.premountUserProfileNodes.delete(node);\n      }\n    };\n    this.mountOrganizationProfile = (node, props) => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.mountOrganizationProfile(node, props);\n      } else {\n        this.premountOrganizationProfileNodes.set(node, props);\n      }\n    };\n    this.unmountOrganizationProfile = node => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.unmountOrganizationProfile(node);\n      } else {\n        this.premountOrganizationProfileNodes.delete(node);\n      }\n    };\n    this.mountCreateOrganization = (node, props) => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.mountCreateOrganization(node, props);\n      } else {\n        this.premountCreateOrganizationNodes.set(node, props);\n      }\n    };\n    this.unmountCreateOrganization = node => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.unmountCreateOrganization(node);\n      } else {\n        this.premountCreateOrganizationNodes.delete(node);\n      }\n    };\n    this.mountOrganizationSwitcher = (node, props) => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.mountOrganizationSwitcher(node, props);\n      } else {\n        this.premountOrganizationSwitcherNodes.set(node, props);\n      }\n    };\n    this.unmountOrganizationSwitcher = node => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.unmountOrganizationSwitcher(node);\n      } else {\n        this.premountOrganizationSwitcherNodes.delete(node);\n      }\n    };\n    this.__experimental_prefetchOrganizationSwitcher = () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.__experimental_prefetchOrganizationSwitcher();\n      };\n      if (this.clerkjs && this.loaded) {\n        void callback();\n      } else {\n        this.premountMethodCalls.set(\"__experimental_prefetchOrganizationSwitcher\", callback);\n      }\n    };\n    this.mountOrganizationList = (node, props) => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.mountOrganizationList(node, props);\n      } else {\n        this.premountOrganizationListNodes.set(node, props);\n      }\n    };\n    this.unmountOrganizationList = node => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.unmountOrganizationList(node);\n      } else {\n        this.premountOrganizationListNodes.delete(node);\n      }\n    };\n    this.mountUserButton = (node, userButtonProps) => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.mountUserButton(node, userButtonProps);\n      } else {\n        this.premountUserButtonNodes.set(node, userButtonProps);\n      }\n    };\n    this.unmountUserButton = node => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.unmountUserButton(node);\n      } else {\n        this.premountUserButtonNodes.delete(node);\n      }\n    };\n    this.mountWaitlist = (node, props) => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.mountWaitlist(node, props);\n      } else {\n        this.premountWaitlistNodes.set(node, props);\n      }\n    };\n    this.unmountWaitlist = node => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.unmountWaitlist(node);\n      } else {\n        this.premountWaitlistNodes.delete(node);\n      }\n    };\n    this.mountPricingTable = (node, props) => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.mountPricingTable(node, props);\n      } else {\n        this.premountPricingTableNodes.set(node, props);\n      }\n    };\n    this.unmountPricingTable = node => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.unmountPricingTable(node);\n      } else {\n        this.premountPricingTableNodes.delete(node);\n      }\n    };\n    this.mountApiKeys = (node, props) => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.mountApiKeys(node, props);\n      } else {\n        this.premountApiKeysNodes.set(node, props);\n      }\n    };\n    this.unmountApiKeys = node => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.unmountApiKeys(node);\n      } else {\n        this.premountApiKeysNodes.delete(node);\n      }\n    };\n    this.__internal_mountOAuthConsent = (node, props) => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.__internal_mountOAuthConsent(node, props);\n      } else {\n        this.premountOAuthConsentNodes.set(node, props);\n      }\n    };\n    this.__internal_unmountOAuthConsent = node => {\n      if (this.clerkjs && this.loaded) {\n        this.clerkjs.__internal_unmountOAuthConsent(node);\n      } else {\n        this.premountOAuthConsentNodes.delete(node);\n      }\n    };\n    this.addListener = listener => {\n      if (this.clerkjs) {\n        return this.clerkjs.addListener(listener);\n      } else {\n        const unsubscribe = () => {\n          var _a;\n          const listenerHandlers = this.premountAddListenerCalls.get(listener);\n          if (listenerHandlers) {\n            (_a = listenerHandlers.nativeUnsubscribe) == null ? void 0 : _a.call(listenerHandlers);\n            this.premountAddListenerCalls.delete(listener);\n          }\n        };\n        this.premountAddListenerCalls.set(listener, {\n          unsubscribe,\n          nativeUnsubscribe: void 0\n        });\n        return unsubscribe;\n      }\n    };\n    this.navigate = to => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.navigate(to);\n      };\n      if (this.clerkjs && this.loaded) {\n        void callback();\n      } else {\n        this.premountMethodCalls.set(\"navigate\", callback);\n      }\n    };\n    this.redirectWithAuth = async (...args) => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectWithAuth(...args);\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectWithAuth\", callback);\n        return;\n      }\n    };\n    this.redirectToSignIn = async opts => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToSignIn(opts);\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToSignIn\", callback);\n        return;\n      }\n    };\n    this.redirectToSignUp = async opts => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToSignUp(opts);\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToSignUp\", callback);\n        return;\n      }\n    };\n    this.redirectToUserProfile = async () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToUserProfile();\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToUserProfile\", callback);\n        return;\n      }\n    };\n    this.redirectToAfterSignUp = () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToAfterSignUp();\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToAfterSignUp\", callback);\n      }\n    };\n    this.redirectToAfterSignIn = () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToAfterSignIn();\n      };\n      if (this.clerkjs && this.loaded) {\n        callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToAfterSignIn\", callback);\n      }\n    };\n    this.redirectToAfterSignOut = () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToAfterSignOut();\n      };\n      if (this.clerkjs && this.loaded) {\n        callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToAfterSignOut\", callback);\n      }\n    };\n    this.redirectToOrganizationProfile = async () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToOrganizationProfile();\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToOrganizationProfile\", callback);\n        return;\n      }\n    };\n    this.redirectToCreateOrganization = async () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToCreateOrganization();\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToCreateOrganization\", callback);\n        return;\n      }\n    };\n    this.redirectToWaitlist = async () => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.redirectToWaitlist();\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToWaitlist\", callback);\n        return;\n      }\n    };\n    this.handleRedirectCallback = async params => {\n      var _a;\n      const callback = () => {\n        var _a2;\n        return (_a2 = this.clerkjs) == null ? void 0 : _a2.handleRedirectCallback(params);\n      };\n      if (this.clerkjs && this.loaded) {\n        void ((_a = callback()) == null ? void 0 : _a.catch(() => {}));\n      } else {\n        this.premountMethodCalls.set(\"handleRedirectCallback\", callback);\n      }\n    };\n    this.handleGoogleOneTapCallback = async (signInOrUp, params) => {\n      var _a;\n      const callback = () => {\n        var _a2;\n        return (_a2 = this.clerkjs) == null ? void 0 : _a2.handleGoogleOneTapCallback(signInOrUp, params);\n      };\n      if (this.clerkjs && this.loaded) {\n        void ((_a = callback()) == null ? void 0 : _a.catch(() => {}));\n      } else {\n        this.premountMethodCalls.set(\"handleGoogleOneTapCallback\", callback);\n      }\n    };\n    this.handleEmailLinkVerification = async params => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.handleEmailLinkVerification(params);\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"handleEmailLinkVerification\", callback);\n      }\n    };\n    this.authenticateWithMetamask = async params => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.authenticateWithMetamask(params);\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"authenticateWithMetamask\", callback);\n      }\n    };\n    this.authenticateWithCoinbaseWallet = async params => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.authenticateWithCoinbaseWallet(params);\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"authenticateWithCoinbaseWallet\", callback);\n      }\n    };\n    this.authenticateWithOKXWallet = async params => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.authenticateWithOKXWallet(params);\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"authenticateWithOKXWallet\", callback);\n      }\n    };\n    this.authenticateWithWeb3 = async params => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.authenticateWithWeb3(params);\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"authenticateWithWeb3\", callback);\n      }\n    };\n    this.authenticateWithGoogleOneTap = async params => {\n      const clerkjs = await __privateMethod(this, _IsomorphicClerk_instances, waitForClerkJS_fn).call(this);\n      return clerkjs.authenticateWithGoogleOneTap(params);\n    };\n    this.__internal_loadStripeJs = async () => {\n      const clerkjs = await __privateMethod(this, _IsomorphicClerk_instances, waitForClerkJS_fn).call(this);\n      return clerkjs.__internal_loadStripeJs();\n    };\n    this.createOrganization = async params => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.createOrganization(params);\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"createOrganization\", callback);\n      }\n    };\n    this.getOrganization = async organizationId => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.getOrganization(organizationId);\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"getOrganization\", callback);\n      }\n    };\n    this.joinWaitlist = async params => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.joinWaitlist(params);\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"joinWaitlist\", callback);\n      }\n    };\n    this.signOut = async (...args) => {\n      const callback = () => {\n        var _a;\n        return (_a = this.clerkjs) == null ? void 0 : _a.signOut(...args);\n      };\n      if (this.clerkjs && this.loaded) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"signOut\", callback);\n      }\n    };\n    const {\n      Clerk = null,\n      publishableKey\n    } = options || {};\n    __privateSet(this, _publishableKey, publishableKey);\n    __privateSet(this, _proxyUrl, options == null ? void 0 : options.proxyUrl);\n    __privateSet(this, _domain, options == null ? void 0 : options.domain);\n    this.options = options;\n    this.Clerk = Clerk;\n    this.mode = inBrowser() ? \"browser\" : \"server\";\n    if (!this.options.sdkMetadata) {\n      this.options.sdkMetadata = SDK_METADATA;\n    }\n    __privateGet(this, _eventBus).emit(clerkEvents.Status, \"loading\");\n    __privateGet(this, _eventBus).prioritizedOn(clerkEvents.Status, status => __privateSet(this, _status, status));\n    if (__privateGet(this, _publishableKey)) {\n      void this.loadClerkJS();\n    }\n  }\n  get publishableKey() {\n    return __privateGet(this, _publishableKey);\n  }\n  get loaded() {\n    var _a;\n    return ((_a = this.clerkjs) == null ? void 0 : _a.loaded) || false;\n  }\n  get status() {\n    var _a;\n    if (!this.clerkjs) {\n      return __privateGet(this, _status);\n    }\n    return ((_a = this.clerkjs) == null ? void 0 : _a.status) || (\n    /**\n    * Support older clerk-js versions.\n    * If clerk-js is available but `.status` is missing it we need to fallback to `.loaded`.\n    * Since \"degraded\" an \"error\" did not exist before,\n    * map \"loaded\" to \"ready\" and \"not loaded\" to \"loading\".\n    */\n    this.clerkjs.loaded ? \"ready\" : \"loading\");\n  }\n  static getOrCreateInstance(options) {\n    if (!inBrowser() || !__privateGet(this, _instance) || options.Clerk && __privateGet(this, _instance).Clerk !== options.Clerk ||\n    // Allow hot swapping PKs on the client\n    __privateGet(this, _instance).publishableKey !== options.publishableKey) {\n      __privateSet(this, _instance, new _IsomorphicClerk(options));\n    }\n    return __privateGet(this, _instance);\n  }\n  static clearInstance() {\n    __privateSet(this, _instance, null);\n  }\n  get domain() {\n    if (typeof window !== \"undefined\" && window.location) {\n      return handleValueOrFn(__privateGet(this, _domain), new URL(window.location.href), \"\");\n    }\n    if (typeof __privateGet(this, _domain) === \"function\") {\n      return errorThrower.throw(unsupportedNonBrowserDomainOrProxyUrlFunction);\n    }\n    return __privateGet(this, _domain) || \"\";\n  }\n  get proxyUrl() {\n    if (typeof window !== \"undefined\" && window.location) {\n      return handleValueOrFn(__privateGet(this, _proxyUrl), new URL(window.location.href), \"\");\n    }\n    if (typeof __privateGet(this, _proxyUrl) === \"function\") {\n      return errorThrower.throw(unsupportedNonBrowserDomainOrProxyUrlFunction);\n    }\n    return __privateGet(this, _proxyUrl) || \"\";\n  }\n  /**\n   * Accesses private options from the `Clerk` instance and defaults to\n   * `IsomorphicClerk` options when in SSR context.\n   *  @internal\n   */\n  __internal_getOption(key) {\n    var _a, _b;\n    return ((_a = this.clerkjs) == null ? void 0 : _a.__internal_getOption) ? (_b = this.clerkjs) == null ? void 0 : _b.__internal_getOption(key) : this.options[key];\n  }\n  get sdkMetadata() {\n    var _a;\n    return ((_a = this.clerkjs) == null ? void 0 : _a.sdkMetadata) || this.options.sdkMetadata || void 0;\n  }\n  get instanceType() {\n    var _a;\n    return (_a = this.clerkjs) == null ? void 0 : _a.instanceType;\n  }\n  get frontendApi() {\n    var _a;\n    return ((_a = this.clerkjs) == null ? void 0 : _a.frontendApi) || \"\";\n  }\n  get isStandardBrowser() {\n    var _a;\n    return ((_a = this.clerkjs) == null ? void 0 : _a.isStandardBrowser) || this.options.standardBrowser || false;\n  }\n  get isSatellite() {\n    if (typeof window !== \"undefined\" && window.location) {\n      return handleValueOrFn(this.options.isSatellite, new URL(window.location.href), false);\n    }\n    if (typeof this.options.isSatellite === \"function\") {\n      return errorThrower.throw(unsupportedNonBrowserDomainOrProxyUrlFunction);\n    }\n    return false;\n  }\n  async loadClerkJS() {\n    var _a;\n    if (this.mode !== \"browser\" || this.loaded) {\n      return;\n    }\n    if (typeof window !== \"undefined\") {\n      window.__clerk_publishable_key = __privateGet(this, _publishableKey);\n      window.__clerk_proxy_url = this.proxyUrl;\n      window.__clerk_domain = this.domain;\n    }\n    try {\n      if (this.Clerk) {\n        let c;\n        if (isConstructor(this.Clerk)) {\n          c = new this.Clerk(__privateGet(this, _publishableKey), {\n            proxyUrl: this.proxyUrl,\n            domain: this.domain\n          });\n          this.beforeLoad(c);\n          await c.load(this.options);\n        } else {\n          c = this.Clerk;\n          if (!c.loaded) {\n            this.beforeLoad(c);\n            await c.load(this.options);\n          }\n        }\n        global.Clerk = c;\n      } else if (!__BUILD_DISABLE_RHC__) {\n        if (!global.Clerk) {\n          await loadClerkJsScript({\n            ...this.options,\n            publishableKey: __privateGet(this, _publishableKey),\n            proxyUrl: this.proxyUrl,\n            domain: this.domain,\n            nonce: this.options.nonce\n          });\n        }\n        if (!global.Clerk) {\n          throw new Error(\"Failed to download latest ClerkJS. Contact support@clerk.com.\");\n        }\n        this.beforeLoad(global.Clerk);\n        await global.Clerk.load(this.options);\n      }\n      if ((_a = global.Clerk) == null ? void 0 : _a.loaded) {\n        return this.hydrateClerkJS(global.Clerk);\n      }\n      return;\n    } catch (err) {\n      const error = err;\n      __privateGet(this, _eventBus).emit(clerkEvents.Status, \"error\");\n      console.error(error.stack || error.message || error);\n      return;\n    }\n  }\n  get version() {\n    var _a;\n    return (_a = this.clerkjs) == null ? void 0 : _a.version;\n  }\n  get client() {\n    if (this.clerkjs) {\n      return this.clerkjs.client;\n    } else {\n      return void 0;\n    }\n  }\n  get session() {\n    if (this.clerkjs) {\n      return this.clerkjs.session;\n    } else {\n      return void 0;\n    }\n  }\n  get user() {\n    if (this.clerkjs) {\n      return this.clerkjs.user;\n    } else {\n      return void 0;\n    }\n  }\n  get organization() {\n    if (this.clerkjs) {\n      return this.clerkjs.organization;\n    } else {\n      return void 0;\n    }\n  }\n  get telemetry() {\n    if (this.clerkjs) {\n      return this.clerkjs.telemetry;\n    } else {\n      return void 0;\n    }\n  }\n  get __unstable__environment() {\n    if (this.clerkjs) {\n      return this.clerkjs.__unstable__environment;\n    } else {\n      return void 0;\n    }\n  }\n  get isSignedIn() {\n    if (this.clerkjs) {\n      return this.clerkjs.isSignedIn;\n    } else {\n      return false;\n    }\n  }\n  get billing() {\n    var _a;\n    return (_a = this.clerkjs) == null ? void 0 : _a.billing;\n  }\n  get apiKeys() {\n    var _a;\n    return (_a = this.clerkjs) == null ? void 0 : _a.apiKeys;\n  }\n  __unstable__setEnvironment(...args) {\n    if (this.clerkjs && \"__unstable__setEnvironment\" in this.clerkjs) {\n      this.clerkjs.__unstable__setEnvironment(args);\n    } else {\n      return void 0;\n    }\n  }\n};\n_status = new WeakMap();\n_domain = new WeakMap();\n_proxyUrl = new WeakMap();\n_publishableKey = new WeakMap();\n_eventBus = new WeakMap();\n_instance = new WeakMap();\n_IsomorphicClerk_instances = new WeakSet();\nwaitForClerkJS_fn = function () {\n  return new Promise(resolve => {\n    this.addOnLoaded(() => resolve(this.clerkjs));\n  });\n};\n__privateAdd(_IsomorphicClerk, _instance);\nvar IsomorphicClerk = _IsomorphicClerk;\n\n// src/contexts/ClerkContextProvider.tsx\nfunction ClerkContextProvider(props) {\n  const {\n    isomorphicClerkOptions,\n    initialState,\n    children\n  } = props;\n  const {\n    isomorphicClerk: clerk,\n    clerkStatus\n  } = useLoadedIsomorphicClerk(isomorphicClerkOptions);\n  const [state, setState] = React5.useState({\n    client: clerk.client,\n    session: clerk.session,\n    user: clerk.user,\n    organization: clerk.organization\n  });\n  React5.useEffect(() => {\n    return clerk.addListener(e => setState({\n      ...e\n    }));\n  }, []);\n  const derivedState = deriveState(clerk.loaded, state, initialState);\n  const clerkCtx = React5.useMemo(() => ({\n    value: clerk\n  }), [\n  // Only update the clerk reference on status change\n  clerkStatus]);\n  const clientCtx = React5.useMemo(() => ({\n    value: state.client\n  }), [state.client]);\n  const {\n    sessionId,\n    sessionStatus,\n    sessionClaims,\n    session,\n    userId,\n    user,\n    orgId,\n    actor,\n    organization,\n    orgRole,\n    orgSlug,\n    orgPermissions,\n    factorVerificationAge\n  } = derivedState;\n  const authCtx = React5.useMemo(() => {\n    const value = {\n      sessionId,\n      sessionStatus,\n      sessionClaims,\n      userId,\n      actor,\n      orgId,\n      orgRole,\n      orgSlug,\n      orgPermissions,\n      factorVerificationAge\n    };\n    return {\n      value\n    };\n  }, [sessionId, sessionStatus, userId, actor, orgId, orgRole, orgSlug, factorVerificationAge, sessionClaims == null ? void 0 : sessionClaims.__raw]);\n  const sessionCtx = React5.useMemo(() => ({\n    value: session\n  }), [sessionId, session]);\n  const userCtx = React5.useMemo(() => ({\n    value: user\n  }), [userId, user]);\n  const organizationCtx = React5.useMemo(() => {\n    const value = {\n      organization\n    };\n    return {\n      value\n    };\n  }, [orgId, organization]);\n  return (\n    // @ts-expect-error value passed is of type IsomorphicClerk where the context expects LoadedClerk\n    /* @__PURE__ */\n    React5.createElement(IsomorphicClerkContext.Provider, {\n      value: clerkCtx\n    }, /* @__PURE__ */React5.createElement(ClientContext.Provider, {\n      value: clientCtx\n    }, /* @__PURE__ */React5.createElement(SessionContext.Provider, {\n      value: sessionCtx\n    }, /* @__PURE__ */React5.createElement(OrganizationProvider, {\n      ...organizationCtx.value\n    }, /* @__PURE__ */React5.createElement(AuthContext.Provider, {\n      value: authCtx\n    }, /* @__PURE__ */React5.createElement(UserContext.Provider, {\n      value: userCtx\n    }, /* @__PURE__ */React5.createElement(CheckoutProvider, {\n      value: void 0\n    }, children)))))))\n  );\n}\nvar useLoadedIsomorphicClerk = options => {\n  const isomorphicClerkRef = React5.useRef(IsomorphicClerk.getOrCreateInstance(options));\n  const [clerkStatus, setClerkStatus] = React5.useState(isomorphicClerkRef.current.status);\n  React5.useEffect(() => {\n    void isomorphicClerkRef.current.__unstable__updateProps({\n      appearance: options.appearance\n    });\n  }, [options.appearance]);\n  React5.useEffect(() => {\n    void isomorphicClerkRef.current.__unstable__updateProps({\n      options\n    });\n  }, [options.localization]);\n  React5.useEffect(() => {\n    isomorphicClerkRef.current.on(\"status\", setClerkStatus);\n    return () => {\n      if (isomorphicClerkRef.current) {\n        isomorphicClerkRef.current.off(\"status\", setClerkStatus);\n      }\n      IsomorphicClerk.clearInstance();\n    };\n  }, []);\n  return {\n    isomorphicClerk: isomorphicClerkRef.current,\n    clerkStatus\n  };\n};\n\n// src/contexts/ClerkProvider.tsx\nfunction ClerkProviderBase(props) {\n  const {\n    initialState,\n    children,\n    __internal_bypassMissingPublishableKey,\n    ...restIsomorphicClerkOptions\n  } = props;\n  const {\n    publishableKey = \"\",\n    Clerk: userInitialisedClerk\n  } = restIsomorphicClerkOptions;\n  if (!userInitialisedClerk && !__internal_bypassMissingPublishableKey) {\n    if (!publishableKey) {\n      errorThrower.throwMissingPublishableKeyError();\n    } else if (publishableKey && !isPublishableKey(publishableKey)) {\n      errorThrower.throwInvalidPublishableKeyError({\n        key: publishableKey\n      });\n    }\n  }\n  return /* @__PURE__ */React6.createElement(ClerkContextProvider, {\n    initialState,\n    isomorphicClerkOptions: restIsomorphicClerkOptions\n  }, children);\n}\nvar ClerkProvider = withMaxAllowedInstancesGuard(ClerkProviderBase, \"ClerkProvider\", multipleClerkProvidersError);\nClerkProvider.displayName = \"ClerkProvider\";\n\n// src/index.ts\nsetErrorThrowerOptions({\n  packageName: \"@clerk/clerk-react\"\n});\nsetClerkJsLoadingErrorPackageName(\"@clerk/clerk-react\");\nexport { APIKeys, AuthenticateWithRedirectCallback, ClerkDegraded, ClerkFailed, ClerkLoaded, ClerkLoading, ClerkProvider, CreateOrganization, GoogleOneTap, OrganizationList, OrganizationProfile, OrganizationSwitcher, PricingTable, Protect, RedirectToCreateOrganization, RedirectToOrganizationProfile, RedirectToSignIn, RedirectToSignUp, RedirectToUserProfile, SignIn, SignInButton, SignInWithMetamaskButton, SignOutButton, SignUp, SignUpButton, SignedIn, SignedOut, UserButton, UserProfile, Waitlist, __experimental_CheckoutProvider, __experimental_PaymentElement, __experimental_PaymentElementProvider, __experimental_useCheckout, __experimental_usePaymentElement, useAuth, useClerk, useEmailLink, useOrganization, useOrganizationList, useReverification, useSession, useSessionList, useSignIn, useSignUp, useUser };","map":{"version":3,"names":["window","global","setClerkJsLoadingErrorPackageName","React","SignInButton","withClerk","clerk","children","props","signUpFallbackRedirectUrl","forceRedirectUrl","fallbackRedirectUrl","signUpForceRedirectUrl","mode","initialValues","withSignUp","oauthFlow","rest","normalizeWithDefaultValue","child","assertSingleChild","clickHandler","opts","openSignIn","appearance","redirectToSignIn","signInFallbackRedirectUrl","signInForceRedirectUrl","wrappedChildClickHandler","e","safeExecute","onClick","childProps","cloneElement","component","renderWhileLoading","React2","SignUpButton","openSignUp","unsafeMetadata","redirectToSignUp","React3","SignOutButton","redirectUrl","signOutOptions","signOut","React4","SignInWithMetamaskButton","authenticate","authenticateWithMetamask","isPublishableKey","React6","deriveState","__experimental_CheckoutProvider","CheckoutProvider","ClientContext","OrganizationProvider","SessionContext","UserContext","React5","inBrowser","clerkEvents","createClerkEventBus","loadClerkJsScript","handleValueOrFn","globalThis","__BUILD_DISABLE_RHC__","SDK_METADATA","name","version","environment","process","env","NODE_ENV","_status","_domain","_proxyUrl","_publishableKey","_eventBus","_instance","_IsomorphicClerk_instances","waitForClerkJS_fn","_IsomorphicClerk","constructor","options","__privateAdd","clerkjs","preopenOneTap","preopenUserVerification","preopenSignIn","preopenCheckout","preopenPlanDetails","preopenSubscriptionDetails","preopenSignUp","preopenUserProfile","preopenOrganizationProfile","preopenCreateOrganization","preOpenWaitlist","premountSignInNodes","Map","premountSignUpNodes","premountUserProfileNodes","premountUserButtonNodes","premountOrganizationProfileNodes","premountCreateOrganizationNodes","premountOrganizationSwitcherNodes","premountOrganizationListNodes","premountMethodCalls","premountWaitlistNodes","premountPricingTableNodes","premountApiKeysNodes","premountOAuthConsentNodes","premountAddListenerCalls","loadedListeners","buildSignInUrl","callback","_a","loaded","set","buildSignUpUrl","buildAfterSignInUrl","args","buildAfterSignUpUrl","buildAfterSignOutUrl","buildNewSubscriptionRedirectUrl","buildAfterMultiSessionSingleSignOutUrl","buildUserProfileUrl","buildCreateOrganizationUrl","buildOrganizationProfileUrl","buildWaitlistUrl","buildUrlWithAuth","to","handleUnauthenticated","on","__privateGet","off","addOnLoaded","cb","push","emitLoaded","forEach","beforeLoad","Error","hydrateClerkJS","listenerHandlers","listener","nativeUnsubscribe","addListener","internal","retrieveListeners","notify","__internal_openCheckout","__internal_openPlanDetails","__internal_openSubscriptionDetails","openUserProfile","__internal_openReverification","openGoogleOneTap","openOrganizationProfile","openCreateOrganization","openWaitlist","node","mountSignIn","mountSignUp","mountUserProfile","mountUserButton","mountOrganizationList","mountWaitlist","mountPricingTable","mountApiKeys","__internal_mountOAuthConsent","status","emit","Status","__experimental_checkout","__unstable__updateProps","__privateMethod","call","__internal_navigateToTaskIfAvailable","params","Promise","reject","setActive","closeSignIn","__internal_closeCheckout","__internal_closePlanDetails","__internal_closeSubscriptionDetails","__internal_closeReverification","closeGoogleOneTap","closeUserProfile","closeOrganizationProfile","closeCreateOrganization","closeWaitlist","closeSignUp","unmountSignIn","delete","unmountSignUp","unmountUserProfile","mountOrganizationProfile","unmountOrganizationProfile","mountCreateOrganization","unmountCreateOrganization","mountOrganizationSwitcher","unmountOrganizationSwitcher","__experimental_prefetchOrganizationSwitcher","unmountOrganizationList","userButtonProps","unmountUserButton","unmountWaitlist","unmountPricingTable","unmountApiKeys","__internal_unmountOAuthConsent","unsubscribe","get","navigate","redirectWithAuth","redirectToUserProfile","redirectToAfterSignUp","redirectToAfterSignIn","redirectToAfterSignOut","redirectToOrganizationProfile","redirectToCreateOrganization","redirectToWaitlist","handleRedirectCallback","_a2","catch","handleGoogleOneTapCallback","signInOrUp","handleEmailLinkVerification","authenticateWithCoinbaseWallet","authenticateWithOKXWallet","authenticateWithWeb3","authenticateWithGoogleOneTap","__internal_loadStripeJs","createOrganization","getOrganization","organizationId","joinWaitlist","Clerk","publishableKey","__privateSet","proxyUrl","domain","sdkMetadata","prioritizedOn","loadClerkJS","getOrCreateInstance","clearInstance","location","URL","href","errorThrower","throw","unsupportedNonBrowserDomainOrProxyUrlFunction","__internal_getOption","key","_b","instanceType","frontendApi","isStandardBrowser","standardBrowser","isSatellite","__clerk_publishable_key","__clerk_proxy_url","__clerk_domain","c","isConstructor","load","nonce","err","error","console","stack","message","client","session","user","organization","telemetry","__unstable__environment","isSignedIn","billing","apiKeys","__unstable__setEnvironment","WeakMap","WeakSet","resolve","IsomorphicClerk","ClerkContextProvider","isomorphicClerkOptions","initialState","isomorphicClerk","clerkStatus","useLoadedIsomorphicClerk","state","setState","useState","useEffect","derivedState","clerkCtx","useMemo","value","clientCtx","sessionId","sessionStatus","sessionClaims","userId","orgId","actor","orgRole","orgSlug","orgPermissions","factorVerificationAge","authCtx","__raw","sessionCtx","userCtx","organizationCtx","createElement","IsomorphicClerkContext","Provider","AuthContext","isomorphicClerkRef","useRef","setClerkStatus","current","localization","ClerkProviderBase","__internal_bypassMissingPublishableKey","restIsomorphicClerkOptions","userInitialisedClerk","throwMissingPublishableKeyError","throwInvalidPublishableKeyError","ClerkProvider","withMaxAllowedInstancesGuard","multipleClerkProvidersError","displayName","setErrorThrowerOptions","packageName"],"sources":["/Users/mohanraj/code/track-health/client/node_modules/@clerk/clerk-react/src/polyfills.ts","/Users/mohanraj/code/track-health/client/node_modules/@clerk/clerk-react/src/index.ts","/Users/mohanraj/code/track-health/client/node_modules/@clerk/clerk-react/src/components/SignInButton.tsx","/Users/mohanraj/code/track-health/client/node_modules/@clerk/clerk-react/src/components/SignUpButton.tsx","/Users/mohanraj/code/track-health/client/node_modules/@clerk/clerk-react/src/components/SignOutButton.tsx","/Users/mohanraj/code/track-health/client/node_modules/@clerk/clerk-react/src/components/SignInWithMetamaskButton.tsx","/Users/mohanraj/code/track-health/client/node_modules/@clerk/clerk-react/src/contexts/ClerkProvider.tsx","/Users/mohanraj/code/track-health/client/node_modules/@clerk/clerk-react/src/contexts/ClerkContextProvider.tsx","/Users/mohanraj/code/track-health/client/node_modules/@clerk/clerk-react/src/isomorphicClerk.ts"],"sourcesContent":["/**\n * Vite does not define `global` by default\n * One workaround is to use the `define` config prop\n * https://vitejs.dev/config/#define\n * We are solving this in the SDK level to reduce setup steps.\n */\nif (typeof window !== 'undefined' && !window.global) {\n  window.global = typeof global === 'undefined' ? window : global;\n}\n\nexport {};\n","import './polyfills';\n\nimport { setClerkJsLoadingErrorPackageName } from '@clerk/shared/loadClerkJsScript';\n\nimport { setErrorThrowerOptions } from './errors/errorThrower';\n\nexport * from './components';\nexport * from './contexts';\n\nexport * from './hooks';\nexport type { BrowserClerk, ClerkProp, HeadlessBrowserClerk, ClerkProviderProps } from './types';\n\nsetErrorThrowerOptions({ packageName: PACKAGE_NAME });\nsetClerkJsLoadingErrorPackageName(PACKAGE_NAME);\n","import type { SignInButtonProps, SignInProps } from '@clerk/types';\nimport React from 'react';\n\nimport type { WithClerkProp } from '../types';\nimport { assertSingleChild, normalizeWithDefaultValue, safeExecute } from '../utils';\nimport { withClerk } from './withClerk';\n\nexport const SignInButton = withClerk(\n  ({ clerk, children, ...props }: WithClerkProp<React.PropsWithChildren<SignInButtonProps>>) => {\n    const {\n      signUpFallbackRedirectUrl,\n      forceRedirectUrl,\n      fallbackRedirectUrl,\n      signUpForceRedirectUrl,\n      mode,\n      initialValues,\n      withSignUp,\n      oauthFlow,\n      ...rest\n    } = props;\n    children = normalizeWithDefaultValue(children, 'Sign in');\n    const child = assertSingleChild(children)('SignInButton');\n\n    const clickHandler = () => {\n      const opts: SignInProps = {\n        forceRedirectUrl,\n        fallbackRedirectUrl,\n        signUpFallbackRedirectUrl,\n        signUpForceRedirectUrl,\n        initialValues,\n        withSignUp,\n        oauthFlow,\n      };\n\n      if (mode === 'modal') {\n        return clerk.openSignIn({ ...opts, appearance: props.appearance });\n      }\n      return clerk.redirectToSignIn({\n        ...opts,\n        signInFallbackRedirectUrl: fallbackRedirectUrl,\n        signInForceRedirectUrl: forceRedirectUrl,\n      });\n    };\n\n    const wrappedChildClickHandler: React.MouseEventHandler = async e => {\n      if (child && typeof child === 'object' && 'props' in child) {\n        await safeExecute(child.props.onClick)(e);\n      }\n      return clickHandler();\n    };\n\n    const childProps = { ...rest, onClick: wrappedChildClickHandler };\n    return React.cloneElement(child as React.ReactElement<unknown>, childProps);\n  },\n  { component: 'SignInButton', renderWhileLoading: true },\n);\n","import type { SignUpButtonProps, SignUpProps } from '@clerk/types';\nimport React from 'react';\n\nimport type { WithClerkProp } from '../types';\nimport { assertSingleChild, normalizeWithDefaultValue, safeExecute } from '../utils';\nimport { withClerk } from './withClerk';\n\nexport const SignUpButton = withClerk(\n  ({ clerk, children, ...props }: WithClerkProp<React.PropsWithChildren<SignUpButtonProps>>) => {\n    const {\n      fallbackRedirectUrl,\n      forceRedirectUrl,\n      signInFallbackRedirectUrl,\n      signInForceRedirectUrl,\n      mode,\n      initialValues,\n      oauthFlow,\n      ...rest\n    } = props;\n\n    children = normalizeWithDefaultValue(children, 'Sign up');\n    const child = assertSingleChild(children)('SignUpButton');\n\n    const clickHandler = () => {\n      const opts: SignUpProps = {\n        fallbackRedirectUrl,\n        forceRedirectUrl,\n        signInFallbackRedirectUrl,\n        signInForceRedirectUrl,\n        initialValues,\n        oauthFlow,\n      };\n\n      if (mode === 'modal') {\n        return clerk.openSignUp({\n          ...opts,\n          appearance: props.appearance,\n          unsafeMetadata: props.unsafeMetadata,\n        });\n      }\n\n      return clerk.redirectToSignUp({\n        ...opts,\n        signUpFallbackRedirectUrl: fallbackRedirectUrl,\n        signUpForceRedirectUrl: forceRedirectUrl,\n      });\n    };\n\n    const wrappedChildClickHandler: React.MouseEventHandler = async e => {\n      if (child && typeof child === 'object' && 'props' in child) {\n        await safeExecute(child.props.onClick)(e);\n      }\n      return clickHandler();\n    };\n\n    const childProps = { ...rest, onClick: wrappedChildClickHandler };\n    return React.cloneElement(child as React.ReactElement<unknown>, childProps);\n  },\n  { component: 'SignUpButton', renderWhileLoading: true },\n);\n","import type { SignOutOptions } from '@clerk/types';\nimport React from 'react';\n\nimport type { WithClerkProp } from '../types';\nimport { assertSingleChild, normalizeWithDefaultValue, safeExecute } from '../utils';\nimport { withClerk } from './withClerk';\n\nexport type SignOutButtonProps = {\n  redirectUrl?: string;\n  signOutOptions?: SignOutOptions;\n  children?: React.ReactNode;\n};\n\nexport const SignOutButton = withClerk(\n  ({ clerk, children, ...props }: React.PropsWithChildren<WithClerkProp<SignOutButtonProps>>) => {\n    const { redirectUrl = '/', signOutOptions, ...rest } = props;\n\n    children = normalizeWithDefaultValue(children, 'Sign out');\n    const child = assertSingleChild(children)('SignOutButton');\n\n    const clickHandler = () => clerk.signOut({ redirectUrl, ...signOutOptions });\n    const wrappedChildClickHandler: React.MouseEventHandler = async e => {\n      await safeExecute((child as any).props.onClick)(e);\n      return clickHandler();\n    };\n\n    const childProps = { ...rest, onClick: wrappedChildClickHandler };\n    return React.cloneElement(child as React.ReactElement<unknown>, childProps);\n  },\n  { component: 'SignOutButton', renderWhileLoading: true },\n);\n","import React from 'react';\n\nimport type { SignInWithMetamaskButtonProps, WithClerkProp } from '../types';\nimport { assertSingleChild, normalizeWithDefaultValue, safeExecute } from '../utils';\nimport { withClerk } from './withClerk';\n\nexport const SignInWithMetamaskButton = withClerk(\n  ({ clerk, children, ...props }: WithClerkProp<SignInWithMetamaskButtonProps>) => {\n    const { redirectUrl, ...rest } = props;\n\n    children = normalizeWithDefaultValue(children, 'Sign in with Metamask');\n    const child = assertSingleChild(children)('SignInWithMetamaskButton');\n\n    // TODO: Properly fix this code\n    // eslint-disable-next-line @typescript-eslint/require-await\n    const clickHandler = async () => {\n      async function authenticate() {\n        await clerk.authenticateWithMetamask({ redirectUrl: redirectUrl || undefined });\n      }\n      void authenticate();\n    };\n\n    const wrappedChildClickHandler: React.MouseEventHandler = async e => {\n      await safeExecute((child as any).props.onClick)(e);\n      return clickHandler();\n    };\n\n    const childProps = { ...rest, onClick: wrappedChildClickHandler };\n    return React.cloneElement(child as React.ReactElement<unknown>, childProps);\n  },\n  { component: 'SignInWithMetamask', renderWhileLoading: true },\n);\n","import { isPublishableKey } from '@clerk/shared/keys';\nimport React from 'react';\n\nimport { errorThrower } from '../errors/errorThrower';\nimport { multipleClerkProvidersError } from '../errors/messages';\nimport type { ClerkProviderProps } from '../types';\nimport { withMaxAllowedInstancesGuard } from '../utils';\nimport { ClerkContextProvider } from './ClerkContextProvider';\n\nfunction ClerkProviderBase(props: ClerkProviderProps) {\n  const { initialState, children, __internal_bypassMissingPublishableKey, ...restIsomorphicClerkOptions } = props;\n  const { publishableKey = '', Clerk: userInitialisedClerk } = restIsomorphicClerkOptions;\n\n  if (!userInitialisedClerk && !__internal_bypassMissingPublishableKey) {\n    if (!publishableKey) {\n      errorThrower.throwMissingPublishableKeyError();\n    } else if (publishableKey && !isPublishableKey(publishableKey)) {\n      errorThrower.throwInvalidPublishableKeyError({ key: publishableKey });\n    }\n  }\n\n  return (\n    <ClerkContextProvider\n      initialState={initialState}\n      isomorphicClerkOptions={restIsomorphicClerkOptions}\n    >\n      {children}\n    </ClerkContextProvider>\n  );\n}\n\nconst ClerkProvider = withMaxAllowedInstancesGuard(ClerkProviderBase, 'ClerkProvider', multipleClerkProvidersError);\n\nClerkProvider.displayName = 'ClerkProvider';\n\nexport { ClerkProvider };\n","import { deriveState } from '@clerk/shared/deriveState';\nimport {\n  __experimental_CheckoutProvider as CheckoutProvider,\n  ClientContext,\n  OrganizationProvider,\n  SessionContext,\n  UserContext,\n} from '@clerk/shared/react';\nimport type { ClientResource, InitialState, Resources } from '@clerk/types';\nimport React from 'react';\n\nimport { IsomorphicClerk } from '../isomorphicClerk';\nimport type { IsomorphicClerkOptions } from '../types';\nimport { AuthContext } from './AuthContext';\nimport { IsomorphicClerkContext } from './IsomorphicClerkContext';\n\ntype ClerkContextProvider = {\n  isomorphicClerkOptions: IsomorphicClerkOptions;\n  initialState: InitialState | undefined;\n  children: React.ReactNode;\n};\n\nexport type ClerkContextProviderState = Resources;\n\nexport function ClerkContextProvider(props: ClerkContextProvider) {\n  const { isomorphicClerkOptions, initialState, children } = props;\n  const { isomorphicClerk: clerk, clerkStatus } = useLoadedIsomorphicClerk(isomorphicClerkOptions);\n\n  const [state, setState] = React.useState<ClerkContextProviderState>({\n    client: clerk.client as ClientResource,\n    session: clerk.session,\n    user: clerk.user,\n    organization: clerk.organization,\n  });\n\n  React.useEffect(() => {\n    return clerk.addListener(e => setState({ ...e }));\n  }, []);\n\n  const derivedState = deriveState(clerk.loaded, state, initialState);\n  const clerkCtx = React.useMemo(\n    () => ({ value: clerk }),\n    [\n      // Only update the clerk reference on status change\n      clerkStatus,\n    ],\n  );\n  const clientCtx = React.useMemo(() => ({ value: state.client }), [state.client]);\n\n  const {\n    sessionId,\n    sessionStatus,\n    sessionClaims,\n    session,\n    userId,\n    user,\n    orgId,\n    actor,\n    organization,\n    orgRole,\n    orgSlug,\n    orgPermissions,\n    factorVerificationAge,\n  } = derivedState;\n\n  const authCtx = React.useMemo(() => {\n    const value = {\n      sessionId,\n      sessionStatus,\n      sessionClaims,\n      userId,\n      actor,\n      orgId,\n      orgRole,\n      orgSlug,\n      orgPermissions,\n      factorVerificationAge,\n    };\n    return { value };\n  }, [sessionId, sessionStatus, userId, actor, orgId, orgRole, orgSlug, factorVerificationAge, sessionClaims?.__raw]);\n\n  const sessionCtx = React.useMemo(() => ({ value: session }), [sessionId, session]);\n  const userCtx = React.useMemo(() => ({ value: user }), [userId, user]);\n  const organizationCtx = React.useMemo(() => {\n    const value = {\n      organization: organization,\n    };\n    return { value };\n  }, [orgId, organization]);\n\n  return (\n    // @ts-expect-error value passed is of type IsomorphicClerk where the context expects LoadedClerk\n    <IsomorphicClerkContext.Provider value={clerkCtx}>\n      <ClientContext.Provider value={clientCtx}>\n        <SessionContext.Provider value={sessionCtx}>\n          <OrganizationProvider {...organizationCtx.value}>\n            <AuthContext.Provider value={authCtx}>\n              <UserContext.Provider value={userCtx}>\n                <CheckoutProvider\n                  // @ts-expect-error - value is not used\n                  value={undefined}\n                >\n                  {children}\n                </CheckoutProvider>\n              </UserContext.Provider>\n            </AuthContext.Provider>\n          </OrganizationProvider>\n        </SessionContext.Provider>\n      </ClientContext.Provider>\n    </IsomorphicClerkContext.Provider>\n  );\n}\n\nconst useLoadedIsomorphicClerk = (options: IsomorphicClerkOptions) => {\n  const isomorphicClerkRef = React.useRef(IsomorphicClerk.getOrCreateInstance(options));\n  const [clerkStatus, setClerkStatus] = React.useState(isomorphicClerkRef.current.status);\n\n  React.useEffect(() => {\n    void isomorphicClerkRef.current.__unstable__updateProps({ appearance: options.appearance });\n  }, [options.appearance]);\n\n  React.useEffect(() => {\n    void isomorphicClerkRef.current.__unstable__updateProps({ options });\n  }, [options.localization]);\n\n  React.useEffect(() => {\n    isomorphicClerkRef.current.on('status', setClerkStatus);\n    return () => {\n      if (isomorphicClerkRef.current) {\n        isomorphicClerkRef.current.off('status', setClerkStatus);\n      }\n      IsomorphicClerk.clearInstance();\n    };\n  }, []);\n\n  return { isomorphicClerk: isomorphicClerkRef.current, clerkStatus };\n};\n","import { inBrowser } from '@clerk/shared/browser';\nimport { clerkEvents, createClerkEventBus } from '@clerk/shared/clerkEventBus';\nimport { loadClerkJsScript } from '@clerk/shared/loadClerkJsScript';\nimport { handleValueOrFn } from '@clerk/shared/utils';\nimport type {\n  __internal_CheckoutProps,\n  __internal_NavigateToTaskIfAvailableParams,\n  __internal_OAuthConsentProps,\n  __internal_PlanDetailsProps,\n  __internal_SubscriptionDetailsProps,\n  __internal_UserVerificationModalProps,\n  __internal_UserVerificationProps,\n  APIKeysNamespace,\n  APIKeysProps,\n  AuthenticateWithCoinbaseWalletParams,\n  AuthenticateWithGoogleOneTapParams,\n  AuthenticateWithMetamaskParams,\n  AuthenticateWithOKXWalletParams,\n  Clerk,\n  ClerkAuthenticateWithWeb3Params,\n  ClerkOptions,\n  ClerkStatus,\n  ClientResource,\n  CommerceBillingNamespace,\n  CreateOrganizationParams,\n  CreateOrganizationProps,\n  DomainOrProxyUrl,\n  GoogleOneTapProps,\n  HandleEmailLinkVerificationParams,\n  HandleOAuthCallbackParams,\n  JoinWaitlistParams,\n  ListenerCallback,\n  LoadedClerk,\n  OrganizationListProps,\n  OrganizationProfileProps,\n  OrganizationResource,\n  OrganizationSwitcherProps,\n  PricingTableProps,\n  RedirectOptions,\n  SetActiveParams,\n  SignInProps,\n  SignInRedirectOptions,\n  SignInResource,\n  SignUpProps,\n  SignUpRedirectOptions,\n  SignUpResource,\n  UnsubscribeCallback,\n  UserButtonProps,\n  UserProfileProps,\n  WaitlistProps,\n  WaitlistResource,\n  Without,\n} from '@clerk/types';\n\nimport { errorThrower } from './errors/errorThrower';\nimport { unsupportedNonBrowserDomainOrProxyUrlFunction } from './errors/messages';\nimport type {\n  BrowserClerk,\n  BrowserClerkConstructor,\n  ClerkProp,\n  HeadlessBrowserClerk,\n  HeadlessBrowserClerkConstructor,\n  IsomorphicClerkOptions,\n} from './types';\nimport { isConstructor } from './utils';\n\nif (typeof globalThis.__BUILD_DISABLE_RHC__ === 'undefined') {\n  globalThis.__BUILD_DISABLE_RHC__ = false;\n}\n\nconst SDK_METADATA = {\n  name: PACKAGE_NAME,\n  version: PACKAGE_VERSION,\n  environment: process.env.NODE_ENV,\n};\n\nexport interface Global {\n  Clerk?: HeadlessBrowserClerk | BrowserClerk;\n}\n\ndeclare const global: Global;\n\ntype GenericFunction<TArgs = never> = (...args: TArgs[]) => unknown;\n\ntype MethodName<T> = {\n  [P in keyof T]: T[P] extends GenericFunction ? P : never;\n}[keyof T];\n\ntype MethodCallback = () => Promise<unknown> | unknown;\n\ntype WithVoidReturn<F extends (...args: any) => any> = (\n  ...args: Parameters<F>\n) => ReturnType<F> extends Promise<infer T> ? Promise<T | void> : ReturnType<F> | void;\ntype WithVoidReturnFunctions<T> = {\n  [K in keyof T]: T[K] extends (...args: any) => any ? WithVoidReturn<T[K]> : T[K];\n};\n\ntype IsomorphicLoadedClerk = Without<\n  WithVoidReturnFunctions<LoadedClerk>,\n  | 'client'\n  | '__internal_addNavigationListener'\n  | '__internal_getCachedResources'\n  | '__internal_reloadInitialResources'\n  | 'billing'\n  | 'apiKeys'\n  | '__internal_setComponentNavigationContext'\n  | '__internal_setActiveInProgress'\n  | '__internal_hasAfterAuthFlows'\n> & {\n  client: ClientResource | undefined;\n  billing: CommerceBillingNamespace | undefined;\n  apiKeys: APIKeysNamespace | undefined;\n};\n\nexport class IsomorphicClerk implements IsomorphicLoadedClerk {\n  private readonly mode: 'browser' | 'server';\n  private readonly options: IsomorphicClerkOptions;\n  private readonly Clerk: ClerkProp;\n  private clerkjs: BrowserClerk | HeadlessBrowserClerk | null = null;\n  private preopenOneTap?: null | GoogleOneTapProps = null;\n  private preopenUserVerification?: null | __internal_UserVerificationProps = null;\n  private preopenSignIn?: null | SignInProps = null;\n  private preopenCheckout?: null | __internal_CheckoutProps = null;\n  private preopenPlanDetails: null | __internal_PlanDetailsProps = null;\n  private preopenSubscriptionDetails: null | __internal_SubscriptionDetailsProps = null;\n  private preopenSignUp?: null | SignUpProps = null;\n  private preopenUserProfile?: null | UserProfileProps = null;\n  private preopenOrganizationProfile?: null | OrganizationProfileProps = null;\n  private preopenCreateOrganization?: null | CreateOrganizationProps = null;\n  private preOpenWaitlist?: null | WaitlistProps = null;\n  private premountSignInNodes = new Map<HTMLDivElement, SignInProps | undefined>();\n  private premountSignUpNodes = new Map<HTMLDivElement, SignUpProps | undefined>();\n  private premountUserProfileNodes = new Map<HTMLDivElement, UserProfileProps | undefined>();\n  private premountUserButtonNodes = new Map<HTMLDivElement, UserButtonProps | undefined>();\n  private premountOrganizationProfileNodes = new Map<HTMLDivElement, OrganizationProfileProps | undefined>();\n  private premountCreateOrganizationNodes = new Map<HTMLDivElement, CreateOrganizationProps | undefined>();\n  private premountOrganizationSwitcherNodes = new Map<HTMLDivElement, OrganizationSwitcherProps | undefined>();\n  private premountOrganizationListNodes = new Map<HTMLDivElement, OrganizationListProps | undefined>();\n  private premountMethodCalls = new Map<MethodName<BrowserClerk>, MethodCallback>();\n  private premountWaitlistNodes = new Map<HTMLDivElement, WaitlistProps | undefined>();\n  private premountPricingTableNodes = new Map<HTMLDivElement, PricingTableProps | undefined>();\n  private premountApiKeysNodes = new Map<HTMLDivElement, APIKeysProps | undefined>();\n  private premountOAuthConsentNodes = new Map<HTMLDivElement, __internal_OAuthConsentProps | undefined>();\n  // A separate Map of `addListener` method calls to handle multiple listeners.\n  private premountAddListenerCalls = new Map<\n    ListenerCallback,\n    {\n      unsubscribe: UnsubscribeCallback;\n      nativeUnsubscribe?: UnsubscribeCallback;\n    }\n  >();\n  private loadedListeners: Array<() => void> = [];\n\n  #status: ClerkStatus = 'loading';\n  #domain: DomainOrProxyUrl['domain'];\n  #proxyUrl: DomainOrProxyUrl['proxyUrl'];\n  #publishableKey: string;\n  #eventBus = createClerkEventBus();\n\n  get publishableKey(): string {\n    return this.#publishableKey;\n  }\n\n  get loaded(): boolean {\n    return this.clerkjs?.loaded || false;\n  }\n\n  get status(): ClerkStatus {\n    /**\n     * If clerk-js is not available the returned value can either be \"loading\" or \"error\".\n     */\n    if (!this.clerkjs) {\n      return this.#status;\n    }\n    return (\n      this.clerkjs?.status ||\n      /**\n       * Support older clerk-js versions.\n       * If clerk-js is available but `.status` is missing it we need to fallback to `.loaded`.\n       * Since \"degraded\" an \"error\" did not exist before,\n       * map \"loaded\" to \"ready\" and \"not loaded\" to \"loading\".\n       */\n      (this.clerkjs.loaded ? 'ready' : 'loading')\n    );\n  }\n\n  static #instance: IsomorphicClerk | null | undefined;\n\n  static getOrCreateInstance(options: IsomorphicClerkOptions) {\n    // During SSR: a new instance should be created for every request\n    // During CSR: use the cached instance for the whole lifetime of the app\n    // Also will recreate the instance if the provided Clerk instance changes\n    // This method should be idempotent in both scenarios\n    if (\n      !inBrowser() ||\n      !this.#instance ||\n      (options.Clerk && this.#instance.Clerk !== options.Clerk) ||\n      // Allow hot swapping PKs on the client\n      this.#instance.publishableKey !== options.publishableKey\n    ) {\n      this.#instance = new IsomorphicClerk(options);\n    }\n    return this.#instance;\n  }\n\n  static clearInstance() {\n    this.#instance = null;\n  }\n\n  get domain(): string {\n    // This getter can run in environments where window is not available.\n    // In those cases we should expect and use domain as a string\n    if (typeof window !== 'undefined' && window.location) {\n      return handleValueOrFn(this.#domain, new URL(window.location.href), '');\n    }\n    if (typeof this.#domain === 'function') {\n      return errorThrower.throw(unsupportedNonBrowserDomainOrProxyUrlFunction);\n    }\n    return this.#domain || '';\n  }\n\n  get proxyUrl(): string {\n    // This getter can run in environments where window is not available.\n    // In those cases we should expect and use proxy as a string\n    if (typeof window !== 'undefined' && window.location) {\n      return handleValueOrFn(this.#proxyUrl, new URL(window.location.href), '');\n    }\n    if (typeof this.#proxyUrl === 'function') {\n      return errorThrower.throw(unsupportedNonBrowserDomainOrProxyUrlFunction);\n    }\n    return this.#proxyUrl || '';\n  }\n\n  /**\n   * Accesses private options from the `Clerk` instance and defaults to\n   * `IsomorphicClerk` options when in SSR context.\n   *  @internal\n   */\n  public __internal_getOption<K extends keyof ClerkOptions>(key: K): ClerkOptions[K] | undefined {\n    return this.clerkjs?.__internal_getOption ? this.clerkjs?.__internal_getOption(key) : this.options[key];\n  }\n\n  constructor(options: IsomorphicClerkOptions) {\n    const { Clerk = null, publishableKey } = options || {};\n    this.#publishableKey = publishableKey;\n    this.#proxyUrl = options?.proxyUrl;\n    this.#domain = options?.domain;\n    this.options = options;\n    this.Clerk = Clerk;\n    this.mode = inBrowser() ? 'browser' : 'server';\n\n    if (!this.options.sdkMetadata) {\n      this.options.sdkMetadata = SDK_METADATA;\n    }\n    this.#eventBus.emit(clerkEvents.Status, 'loading');\n    this.#eventBus.prioritizedOn(clerkEvents.Status, status => (this.#status = status));\n\n    if (this.#publishableKey) {\n      void this.loadClerkJS();\n    }\n  }\n\n  get sdkMetadata() {\n    return this.clerkjs?.sdkMetadata || this.options.sdkMetadata || undefined;\n  }\n\n  get instanceType() {\n    return this.clerkjs?.instanceType;\n  }\n\n  get frontendApi() {\n    return this.clerkjs?.frontendApi || '';\n  }\n\n  get isStandardBrowser() {\n    return this.clerkjs?.isStandardBrowser || this.options.standardBrowser || false;\n  }\n\n  get isSatellite() {\n    // This getter can run in environments where window is not available.\n    // In those cases we should expect and use domain as a string\n    if (typeof window !== 'undefined' && window.location) {\n      return handleValueOrFn(this.options.isSatellite, new URL(window.location.href), false);\n    }\n    if (typeof this.options.isSatellite === 'function') {\n      return errorThrower.throw(unsupportedNonBrowserDomainOrProxyUrlFunction);\n    }\n    return false;\n  }\n\n  buildSignInUrl = (opts?: RedirectOptions): string | void => {\n    const callback = () => this.clerkjs?.buildSignInUrl(opts) || '';\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildSignInUrl', callback);\n    }\n  };\n\n  buildSignUpUrl = (opts?: RedirectOptions): string | void => {\n    const callback = () => this.clerkjs?.buildSignUpUrl(opts) || '';\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildSignUpUrl', callback);\n    }\n  };\n\n  buildAfterSignInUrl = (...args: Parameters<Clerk['buildAfterSignInUrl']>): string | void => {\n    const callback = () => this.clerkjs?.buildAfterSignInUrl(...args) || '';\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildAfterSignInUrl', callback);\n    }\n  };\n\n  buildAfterSignUpUrl = (...args: Parameters<Clerk['buildAfterSignUpUrl']>): string | void => {\n    const callback = () => this.clerkjs?.buildAfterSignUpUrl(...args) || '';\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildAfterSignUpUrl', callback);\n    }\n  };\n\n  buildAfterSignOutUrl = (): string | void => {\n    const callback = () => this.clerkjs?.buildAfterSignOutUrl() || '';\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildAfterSignOutUrl', callback);\n    }\n  };\n\n  buildNewSubscriptionRedirectUrl = (): string | void => {\n    const callback = () => this.clerkjs?.buildNewSubscriptionRedirectUrl() || '';\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildNewSubscriptionRedirectUrl', callback);\n    }\n  };\n\n  buildAfterMultiSessionSingleSignOutUrl = (): string | void => {\n    const callback = () => this.clerkjs?.buildAfterMultiSessionSingleSignOutUrl() || '';\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildAfterMultiSessionSingleSignOutUrl', callback);\n    }\n  };\n\n  buildUserProfileUrl = (): string | void => {\n    const callback = () => this.clerkjs?.buildUserProfileUrl() || '';\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildUserProfileUrl', callback);\n    }\n  };\n\n  buildCreateOrganizationUrl = (): string | void => {\n    const callback = () => this.clerkjs?.buildCreateOrganizationUrl() || '';\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildCreateOrganizationUrl', callback);\n    }\n  };\n\n  buildOrganizationProfileUrl = (): string | void => {\n    const callback = () => this.clerkjs?.buildOrganizationProfileUrl() || '';\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildOrganizationProfileUrl', callback);\n    }\n  };\n\n  buildWaitlistUrl = (): string | void => {\n    const callback = () => this.clerkjs?.buildWaitlistUrl() || '';\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildWaitlistUrl', callback);\n    }\n  };\n\n  buildUrlWithAuth = (to: string): string | void => {\n    const callback = () => this.clerkjs?.buildUrlWithAuth(to) || '';\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('buildUrlWithAuth', callback);\n    }\n  };\n\n  handleUnauthenticated = async () => {\n    const callback = () => this.clerkjs?.handleUnauthenticated();\n    if (this.clerkjs && this.loaded) {\n      void callback();\n    } else {\n      this.premountMethodCalls.set('handleUnauthenticated', callback);\n    }\n  };\n\n  #waitForClerkJS(): Promise<HeadlessBrowserClerk | BrowserClerk> {\n    return new Promise<HeadlessBrowserClerk | BrowserClerk>(resolve => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      this.addOnLoaded(() => resolve(this.clerkjs!));\n    });\n  }\n\n  async loadClerkJS(): Promise<HeadlessBrowserClerk | BrowserClerk | undefined> {\n    if (this.mode !== 'browser' || this.loaded) {\n      return;\n    }\n\n    // Store frontendAPI value on window as a fallback. This value can be used as a\n    // fallback during ClerkJS hot loading in case ClerkJS fails to find the\n    // \"data-clerk-frontend-api\" attribute on its script tag.\n\n    // This can happen when the DOM is altered completely during client rehydration.\n    // For example, in Remix with React 18 the document changes completely via `hydrateRoot(document)`.\n\n    // For more information refer to:\n    // - https://github.com/remix-run/remix/issues/2947\n    // - https://github.com/facebook/react/issues/24430\n    if (typeof window !== 'undefined') {\n      window.__clerk_publishable_key = this.#publishableKey;\n      window.__clerk_proxy_url = this.proxyUrl;\n      window.__clerk_domain = this.domain;\n    }\n\n    try {\n      if (this.Clerk) {\n        // Set a fixed Clerk version\n        let c: ClerkProp;\n\n        if (isConstructor<BrowserClerkConstructor | HeadlessBrowserClerkConstructor>(this.Clerk)) {\n          // Construct a new Clerk object if a constructor is passed\n          c = new this.Clerk(this.#publishableKey, {\n            proxyUrl: this.proxyUrl,\n            domain: this.domain,\n          } as any);\n\n          this.beforeLoad(c);\n          await c.load(this.options);\n        } else {\n          // Otherwise use the instantiated Clerk object\n          c = this.Clerk;\n          if (!c.loaded) {\n            this.beforeLoad(c);\n            await c.load(this.options);\n          }\n        }\n\n        global.Clerk = c;\n      } else if (!__BUILD_DISABLE_RHC__) {\n        // Hot-load latest ClerkJS from Clerk CDN\n        if (!global.Clerk) {\n          await loadClerkJsScript({\n            ...this.options,\n            publishableKey: this.#publishableKey,\n            proxyUrl: this.proxyUrl,\n            domain: this.domain,\n            nonce: this.options.nonce,\n          });\n        }\n\n        if (!global.Clerk) {\n          throw new Error('Failed to download latest ClerkJS. Contact support@clerk.com.');\n        }\n\n        this.beforeLoad(global.Clerk);\n        await global.Clerk.load(this.options);\n      }\n\n      if (global.Clerk?.loaded) {\n        return this.hydrateClerkJS(global.Clerk);\n      }\n      return;\n    } catch (err) {\n      const error = err as Error;\n      this.#eventBus.emit(clerkEvents.Status, 'error');\n      console.error(error.stack || error.message || error);\n      return;\n    }\n  }\n\n  public on: Clerk['on'] = (...args) => {\n    // Support older clerk-js versions.\n    if (this.clerkjs?.on) {\n      return this.clerkjs.on(...args);\n    } else {\n      this.#eventBus.on(...args);\n    }\n  };\n\n  public off: Clerk['off'] = (...args) => {\n    // Support older clerk-js versions.\n    if (this.clerkjs?.off) {\n      return this.clerkjs.off(...args);\n    } else {\n      this.#eventBus.off(...args);\n    }\n  };\n\n  /**\n   * @deprecated Please use `addStatusListener`. This api will be removed in the next major.\n   */\n  public addOnLoaded = (cb: () => void) => {\n    this.loadedListeners.push(cb);\n    /**\n     * When IsomorphicClerk is loaded execute the callback directly\n     */\n    if (this.loaded) {\n      this.emitLoaded();\n    }\n  };\n\n  /**\n   * @deprecated Please use `__internal_setStatus`. This api will be removed in the next major.\n   */\n  public emitLoaded = () => {\n    this.loadedListeners.forEach(cb => cb());\n    this.loadedListeners = [];\n  };\n\n  private beforeLoad = (clerkjs: BrowserClerk | HeadlessBrowserClerk | undefined) => {\n    if (!clerkjs) {\n      throw new Error('Failed to hydrate latest Clerk JS');\n    }\n  };\n\n  private hydrateClerkJS = (clerkjs: BrowserClerk | HeadlessBrowserClerk | undefined) => {\n    if (!clerkjs) {\n      throw new Error('Failed to hydrate latest Clerk JS');\n    }\n\n    this.clerkjs = clerkjs;\n\n    this.premountMethodCalls.forEach(cb => cb());\n    this.premountAddListenerCalls.forEach((listenerHandlers, listener) => {\n      listenerHandlers.nativeUnsubscribe = clerkjs.addListener(listener);\n    });\n\n    this.#eventBus.internal.retrieveListeners('status')?.forEach(listener => {\n      // Since clerkjs exists it will call `this.clerkjs.on('status', listener)`\n      this.on('status', listener, { notify: true });\n    });\n\n    if (this.preopenSignIn !== null) {\n      clerkjs.openSignIn(this.preopenSignIn);\n    }\n\n    if (this.preopenCheckout !== null) {\n      clerkjs.__internal_openCheckout(this.preopenCheckout);\n    }\n\n    if (this.preopenPlanDetails !== null) {\n      clerkjs.__internal_openPlanDetails(this.preopenPlanDetails);\n    }\n\n    if (this.preopenSubscriptionDetails !== null) {\n      clerkjs.__internal_openSubscriptionDetails(this.preopenSubscriptionDetails);\n    }\n\n    if (this.preopenSignUp !== null) {\n      clerkjs.openSignUp(this.preopenSignUp);\n    }\n\n    if (this.preopenUserProfile !== null) {\n      clerkjs.openUserProfile(this.preopenUserProfile);\n    }\n\n    if (this.preopenUserVerification !== null) {\n      clerkjs.__internal_openReverification(this.preopenUserVerification);\n    }\n\n    if (this.preopenOneTap !== null) {\n      clerkjs.openGoogleOneTap(this.preopenOneTap);\n    }\n\n    if (this.preopenOrganizationProfile !== null) {\n      clerkjs.openOrganizationProfile(this.preopenOrganizationProfile);\n    }\n\n    if (this.preopenCreateOrganization !== null) {\n      clerkjs.openCreateOrganization(this.preopenCreateOrganization);\n    }\n\n    if (this.preOpenWaitlist !== null) {\n      clerkjs.openWaitlist(this.preOpenWaitlist);\n    }\n\n    this.premountSignInNodes.forEach((props, node) => {\n      clerkjs.mountSignIn(node, props);\n    });\n\n    this.premountSignUpNodes.forEach((props, node) => {\n      clerkjs.mountSignUp(node, props);\n    });\n\n    this.premountUserProfileNodes.forEach((props, node) => {\n      clerkjs.mountUserProfile(node, props);\n    });\n\n    this.premountUserButtonNodes.forEach((props, node) => {\n      clerkjs.mountUserButton(node, props);\n    });\n\n    this.premountOrganizationListNodes.forEach((props, node) => {\n      clerkjs.mountOrganizationList(node, props);\n    });\n\n    this.premountWaitlistNodes.forEach((props, node) => {\n      clerkjs.mountWaitlist(node, props);\n    });\n\n    this.premountPricingTableNodes.forEach((props, node) => {\n      clerkjs.mountPricingTable(node, props);\n    });\n\n    this.premountApiKeysNodes.forEach((props, node) => {\n      clerkjs.mountApiKeys(node, props);\n    });\n\n    this.premountOAuthConsentNodes.forEach((props, node) => {\n      clerkjs.__internal_mountOAuthConsent(node, props);\n    });\n\n    /**\n     * Only update status in case `clerk.status` is missing. In any other case, `clerk-js` should be the orchestrator.\n     */\n    if (typeof this.clerkjs.status === 'undefined') {\n      this.#eventBus.emit(clerkEvents.Status, 'ready');\n    }\n\n    this.emitLoaded();\n    return this.clerkjs;\n  };\n\n  get version() {\n    return this.clerkjs?.version;\n  }\n\n  get client(): ClientResource | undefined {\n    if (this.clerkjs) {\n      return this.clerkjs.client;\n      // TODO: add ssr condition\n    } else {\n      return undefined;\n    }\n  }\n\n  get session() {\n    if (this.clerkjs) {\n      return this.clerkjs.session;\n    } else {\n      return undefined;\n    }\n  }\n\n  get user() {\n    if (this.clerkjs) {\n      return this.clerkjs.user;\n    } else {\n      return undefined;\n    }\n  }\n\n  get organization() {\n    if (this.clerkjs) {\n      return this.clerkjs.organization;\n    } else {\n      return undefined;\n    }\n  }\n\n  get telemetry() {\n    if (this.clerkjs) {\n      return this.clerkjs.telemetry;\n    } else {\n      return undefined;\n    }\n  }\n\n  get __unstable__environment(): any {\n    if (this.clerkjs) {\n      return (this.clerkjs as any).__unstable__environment;\n      // TODO: add ssr condition\n    } else {\n      return undefined;\n    }\n  }\n\n  get isSignedIn(): boolean {\n    if (this.clerkjs) {\n      return this.clerkjs.isSignedIn;\n    } else {\n      return false;\n    }\n  }\n\n  get billing(): CommerceBillingNamespace | undefined {\n    return this.clerkjs?.billing;\n  }\n\n  get apiKeys(): APIKeysNamespace | undefined {\n    return this.clerkjs?.apiKeys;\n  }\n\n  __experimental_checkout = (...args: Parameters<Clerk['__experimental_checkout']>) => {\n    return this.clerkjs?.__experimental_checkout(...args);\n  };\n\n  __unstable__setEnvironment(...args: any): void {\n    if (this.clerkjs && '__unstable__setEnvironment' in this.clerkjs) {\n      (this.clerkjs as any).__unstable__setEnvironment(args);\n    } else {\n      return undefined;\n    }\n  }\n\n  __unstable__updateProps = async (props: any): Promise<void> => {\n    const clerkjs = await this.#waitForClerkJS();\n    // Handle case where accounts has clerk-react@4 installed, but clerk-js@3 is manually loaded\n    if (clerkjs && '__unstable__updateProps' in clerkjs) {\n      return (clerkjs as any).__unstable__updateProps(props);\n    }\n  };\n\n  __internal_navigateToTaskIfAvailable = async (params?: __internal_NavigateToTaskIfAvailableParams): Promise<void> => {\n    if (this.clerkjs) {\n      return this.clerkjs.__internal_navigateToTaskIfAvailable(params);\n    } else {\n      return Promise.reject();\n    }\n  };\n\n  /**\n   * `setActive` can be used to set the active session and/or organization.\n   */\n  setActive = (params: SetActiveParams): Promise<void> => {\n    if (this.clerkjs) {\n      return this.clerkjs.setActive(params);\n    } else {\n      return Promise.reject();\n    }\n  };\n\n  openSignIn = (props?: SignInProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.openSignIn(props);\n    } else {\n      this.preopenSignIn = props;\n    }\n  };\n\n  closeSignIn = () => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.closeSignIn();\n    } else {\n      this.preopenSignIn = null;\n    }\n  };\n\n  __internal_openCheckout = (props?: __internal_CheckoutProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.__internal_openCheckout(props);\n    } else {\n      this.preopenCheckout = props;\n    }\n  };\n\n  __internal_closeCheckout = () => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.__internal_closeCheckout();\n    } else {\n      this.preopenCheckout = null;\n    }\n  };\n\n  __internal_openPlanDetails = (props: __internal_PlanDetailsProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.__internal_openPlanDetails(props);\n    } else {\n      this.preopenPlanDetails = props;\n    }\n  };\n\n  __internal_closePlanDetails = () => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.__internal_closePlanDetails();\n    } else {\n      this.preopenPlanDetails = null;\n    }\n  };\n\n  __internal_openSubscriptionDetails = (props?: __internal_SubscriptionDetailsProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.__internal_openSubscriptionDetails(props);\n    } else {\n      this.preopenSubscriptionDetails = props ?? null;\n    }\n  };\n\n  __internal_closeSubscriptionDetails = () => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.__internal_closeSubscriptionDetails();\n    } else {\n      this.preopenSubscriptionDetails = null;\n    }\n  };\n\n  __internal_openReverification = (props?: __internal_UserVerificationModalProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.__internal_openReverification(props);\n    } else {\n      this.preopenUserVerification = props;\n    }\n  };\n\n  __internal_closeReverification = () => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.__internal_closeReverification();\n    } else {\n      this.preopenUserVerification = null;\n    }\n  };\n\n  openGoogleOneTap = (props?: GoogleOneTapProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.openGoogleOneTap(props);\n    } else {\n      this.preopenOneTap = props;\n    }\n  };\n\n  closeGoogleOneTap = () => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.closeGoogleOneTap();\n    } else {\n      this.preopenOneTap = null;\n    }\n  };\n\n  openUserProfile = (props?: UserProfileProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.openUserProfile(props);\n    } else {\n      this.preopenUserProfile = props;\n    }\n  };\n\n  closeUserProfile = () => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.closeUserProfile();\n    } else {\n      this.preopenUserProfile = null;\n    }\n  };\n\n  openOrganizationProfile = (props?: OrganizationProfileProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.openOrganizationProfile(props);\n    } else {\n      this.preopenOrganizationProfile = props;\n    }\n  };\n\n  closeOrganizationProfile = () => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.closeOrganizationProfile();\n    } else {\n      this.preopenOrganizationProfile = null;\n    }\n  };\n\n  openCreateOrganization = (props?: CreateOrganizationProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.openCreateOrganization(props);\n    } else {\n      this.preopenCreateOrganization = props;\n    }\n  };\n\n  closeCreateOrganization = () => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.closeCreateOrganization();\n    } else {\n      this.preopenCreateOrganization = null;\n    }\n  };\n\n  openWaitlist = (props?: WaitlistProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.openWaitlist(props);\n    } else {\n      this.preOpenWaitlist = props;\n    }\n  };\n\n  closeWaitlist = () => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.closeWaitlist();\n    } else {\n      this.preOpenWaitlist = null;\n    }\n  };\n\n  openSignUp = (props?: SignUpProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.openSignUp(props);\n    } else {\n      this.preopenSignUp = props;\n    }\n  };\n\n  closeSignUp = () => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.closeSignUp();\n    } else {\n      this.preopenSignUp = null;\n    }\n  };\n\n  mountSignIn = (node: HTMLDivElement, props?: SignInProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.mountSignIn(node, props);\n    } else {\n      this.premountSignInNodes.set(node, props);\n    }\n  };\n\n  unmountSignIn = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.unmountSignIn(node);\n    } else {\n      this.premountSignInNodes.delete(node);\n    }\n  };\n\n  mountSignUp = (node: HTMLDivElement, props?: SignUpProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.mountSignUp(node, props);\n    } else {\n      this.premountSignUpNodes.set(node, props);\n    }\n  };\n\n  unmountSignUp = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.unmountSignUp(node);\n    } else {\n      this.premountSignUpNodes.delete(node);\n    }\n  };\n\n  mountUserProfile = (node: HTMLDivElement, props?: UserProfileProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.mountUserProfile(node, props);\n    } else {\n      this.premountUserProfileNodes.set(node, props);\n    }\n  };\n\n  unmountUserProfile = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.unmountUserProfile(node);\n    } else {\n      this.premountUserProfileNodes.delete(node);\n    }\n  };\n\n  mountOrganizationProfile = (node: HTMLDivElement, props?: OrganizationProfileProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.mountOrganizationProfile(node, props);\n    } else {\n      this.premountOrganizationProfileNodes.set(node, props);\n    }\n  };\n\n  unmountOrganizationProfile = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.unmountOrganizationProfile(node);\n    } else {\n      this.premountOrganizationProfileNodes.delete(node);\n    }\n  };\n\n  mountCreateOrganization = (node: HTMLDivElement, props?: CreateOrganizationProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.mountCreateOrganization(node, props);\n    } else {\n      this.premountCreateOrganizationNodes.set(node, props);\n    }\n  };\n\n  unmountCreateOrganization = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.unmountCreateOrganization(node);\n    } else {\n      this.premountCreateOrganizationNodes.delete(node);\n    }\n  };\n\n  mountOrganizationSwitcher = (node: HTMLDivElement, props?: OrganizationSwitcherProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.mountOrganizationSwitcher(node, props);\n    } else {\n      this.premountOrganizationSwitcherNodes.set(node, props);\n    }\n  };\n\n  unmountOrganizationSwitcher = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.unmountOrganizationSwitcher(node);\n    } else {\n      this.premountOrganizationSwitcherNodes.delete(node);\n    }\n  };\n\n  __experimental_prefetchOrganizationSwitcher = () => {\n    const callback = () => this.clerkjs?.__experimental_prefetchOrganizationSwitcher();\n    if (this.clerkjs && this.loaded) {\n      void callback();\n    } else {\n      this.premountMethodCalls.set('__experimental_prefetchOrganizationSwitcher', callback);\n    }\n  };\n\n  mountOrganizationList = (node: HTMLDivElement, props?: OrganizationListProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.mountOrganizationList(node, props);\n    } else {\n      this.premountOrganizationListNodes.set(node, props);\n    }\n  };\n\n  unmountOrganizationList = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.unmountOrganizationList(node);\n    } else {\n      this.premountOrganizationListNodes.delete(node);\n    }\n  };\n\n  mountUserButton = (node: HTMLDivElement, userButtonProps?: UserButtonProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.mountUserButton(node, userButtonProps);\n    } else {\n      this.premountUserButtonNodes.set(node, userButtonProps);\n    }\n  };\n\n  unmountUserButton = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.unmountUserButton(node);\n    } else {\n      this.premountUserButtonNodes.delete(node);\n    }\n  };\n\n  mountWaitlist = (node: HTMLDivElement, props?: WaitlistProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.mountWaitlist(node, props);\n    } else {\n      this.premountWaitlistNodes.set(node, props);\n    }\n  };\n\n  unmountWaitlist = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.unmountWaitlist(node);\n    } else {\n      this.premountWaitlistNodes.delete(node);\n    }\n  };\n\n  mountPricingTable = (node: HTMLDivElement, props?: PricingTableProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.mountPricingTable(node, props);\n    } else {\n      this.premountPricingTableNodes.set(node, props);\n    }\n  };\n\n  unmountPricingTable = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.unmountPricingTable(node);\n    } else {\n      this.premountPricingTableNodes.delete(node);\n    }\n  };\n\n  mountApiKeys = (node: HTMLDivElement, props?: APIKeysProps): void => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.mountApiKeys(node, props);\n    } else {\n      this.premountApiKeysNodes.set(node, props);\n    }\n  };\n\n  unmountApiKeys = (node: HTMLDivElement): void => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.unmountApiKeys(node);\n    } else {\n      this.premountApiKeysNodes.delete(node);\n    }\n  };\n\n  __internal_mountOAuthConsent = (node: HTMLDivElement, props?: __internal_OAuthConsentProps) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.__internal_mountOAuthConsent(node, props);\n    } else {\n      this.premountOAuthConsentNodes.set(node, props);\n    }\n  };\n\n  __internal_unmountOAuthConsent = (node: HTMLDivElement) => {\n    if (this.clerkjs && this.loaded) {\n      this.clerkjs.__internal_unmountOAuthConsent(node);\n    } else {\n      this.premountOAuthConsentNodes.delete(node);\n    }\n  };\n\n  addListener = (listener: ListenerCallback): UnsubscribeCallback => {\n    if (this.clerkjs) {\n      return this.clerkjs.addListener(listener);\n    } else {\n      const unsubscribe = () => {\n        const listenerHandlers = this.premountAddListenerCalls.get(listener);\n        if (listenerHandlers) {\n          listenerHandlers.nativeUnsubscribe?.();\n          this.premountAddListenerCalls.delete(listener);\n        }\n      };\n      this.premountAddListenerCalls.set(listener, { unsubscribe, nativeUnsubscribe: undefined });\n      return unsubscribe;\n    }\n  };\n\n  navigate = (to: string) => {\n    const callback = () => this.clerkjs?.navigate(to);\n    if (this.clerkjs && this.loaded) {\n      void callback();\n    } else {\n      this.premountMethodCalls.set('navigate', callback);\n    }\n  };\n\n  redirectWithAuth = async (...args: Parameters<Clerk['redirectWithAuth']>) => {\n    const callback = () => this.clerkjs?.redirectWithAuth(...args);\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('redirectWithAuth', callback);\n      return;\n    }\n  };\n\n  redirectToSignIn = async (opts?: SignInRedirectOptions) => {\n    const callback = () => this.clerkjs?.redirectToSignIn(opts as any);\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('redirectToSignIn', callback);\n      return;\n    }\n  };\n\n  redirectToSignUp = async (opts?: SignUpRedirectOptions) => {\n    const callback = () => this.clerkjs?.redirectToSignUp(opts as any);\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('redirectToSignUp', callback);\n      return;\n    }\n  };\n\n  redirectToUserProfile = async () => {\n    const callback = () => this.clerkjs?.redirectToUserProfile();\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('redirectToUserProfile', callback);\n      return;\n    }\n  };\n\n  redirectToAfterSignUp = (): void => {\n    const callback = () => this.clerkjs?.redirectToAfterSignUp();\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('redirectToAfterSignUp', callback);\n    }\n  };\n\n  redirectToAfterSignIn = () => {\n    const callback = () => this.clerkjs?.redirectToAfterSignIn();\n    if (this.clerkjs && this.loaded) {\n      callback();\n    } else {\n      this.premountMethodCalls.set('redirectToAfterSignIn', callback);\n    }\n  };\n\n  redirectToAfterSignOut = () => {\n    const callback = () => this.clerkjs?.redirectToAfterSignOut();\n    if (this.clerkjs && this.loaded) {\n      callback();\n    } else {\n      this.premountMethodCalls.set('redirectToAfterSignOut', callback);\n    }\n  };\n\n  redirectToOrganizationProfile = async () => {\n    const callback = () => this.clerkjs?.redirectToOrganizationProfile();\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('redirectToOrganizationProfile', callback);\n      return;\n    }\n  };\n\n  redirectToCreateOrganization = async () => {\n    const callback = () => this.clerkjs?.redirectToCreateOrganization();\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('redirectToCreateOrganization', callback);\n      return;\n    }\n  };\n\n  redirectToWaitlist = async () => {\n    const callback = () => this.clerkjs?.redirectToWaitlist();\n    if (this.clerkjs && this.loaded) {\n      return callback();\n    } else {\n      this.premountMethodCalls.set('redirectToWaitlist', callback);\n      return;\n    }\n  };\n\n  handleRedirectCallback = async (params: HandleOAuthCallbackParams): Promise<void> => {\n    const callback = () => this.clerkjs?.handleRedirectCallback(params);\n    if (this.clerkjs && this.loaded) {\n      void callback()?.catch(() => {\n        // This error is caused when the host app is using React18\n        // and strictMode is enabled. This useEffects runs twice because\n        // the clerk-react ui components mounts, unmounts and mounts again\n        // so the clerk-js component loses its state because of the custom\n        // unmount callback we're using.\n        // This needs to be solved by tweaking the logic in uiComponents.tsx\n        // or by making handleRedirectCallback idempotent\n      });\n    } else {\n      this.premountMethodCalls.set('handleRedirectCallback', callback);\n    }\n  };\n\n  handleGoogleOneTapCallback = async (\n    signInOrUp: SignInResource | SignUpResource,\n    params: HandleOAuthCallbackParams,\n  ): Promise<void> => {\n    const callback = () => this.clerkjs?.handleGoogleOneTapCallback(signInOrUp, params);\n    if (this.clerkjs && this.loaded) {\n      void callback()?.catch(() => {\n        // This error is caused when the host app is using React18\n        // and strictMode is enabled. This useEffects runs twice because\n        // the clerk-react ui components mounts, unmounts and mounts again\n        // so the clerk-js component loses its state because of the custom\n        // unmount callback we're using.\n        // This needs to be solved by tweaking the logic in uiComponents.tsx\n        // or by making handleRedirectCallback idempotent\n      });\n    } else {\n      this.premountMethodCalls.set('handleGoogleOneTapCallback', callback);\n    }\n  };\n\n  handleEmailLinkVerification = async (params: HandleEmailLinkVerificationParams) => {\n    const callback = () => this.clerkjs?.handleEmailLinkVerification(params);\n    if (this.clerkjs && this.loaded) {\n      return callback() as Promise<void>;\n    } else {\n      this.premountMethodCalls.set('handleEmailLinkVerification', callback);\n    }\n  };\n\n  authenticateWithMetamask = async (params?: AuthenticateWithMetamaskParams) => {\n    const callback = () => this.clerkjs?.authenticateWithMetamask(params);\n    if (this.clerkjs && this.loaded) {\n      return callback() as Promise<void>;\n    } else {\n      this.premountMethodCalls.set('authenticateWithMetamask', callback);\n    }\n  };\n\n  authenticateWithCoinbaseWallet = async (params?: AuthenticateWithCoinbaseWalletParams) => {\n    const callback = () => this.clerkjs?.authenticateWithCoinbaseWallet(params);\n    if (this.clerkjs && this.loaded) {\n      return callback() as Promise<void>;\n    } else {\n      this.premountMethodCalls.set('authenticateWithCoinbaseWallet', callback);\n    }\n  };\n\n  authenticateWithOKXWallet = async (params?: AuthenticateWithOKXWalletParams) => {\n    const callback = () => this.clerkjs?.authenticateWithOKXWallet(params);\n    if (this.clerkjs && this.loaded) {\n      return callback() as Promise<void>;\n    } else {\n      this.premountMethodCalls.set('authenticateWithOKXWallet', callback);\n    }\n  };\n\n  authenticateWithWeb3 = async (params: ClerkAuthenticateWithWeb3Params) => {\n    const callback = () => this.clerkjs?.authenticateWithWeb3(params);\n    if (this.clerkjs && this.loaded) {\n      return callback() as Promise<void>;\n    } else {\n      this.premountMethodCalls.set('authenticateWithWeb3', callback);\n    }\n  };\n\n  authenticateWithGoogleOneTap = async (params: AuthenticateWithGoogleOneTapParams) => {\n    const clerkjs = await this.#waitForClerkJS();\n    return clerkjs.authenticateWithGoogleOneTap(params);\n  };\n\n  __internal_loadStripeJs = async () => {\n    const clerkjs = await this.#waitForClerkJS();\n    return clerkjs.__internal_loadStripeJs();\n  };\n\n  createOrganization = async (params: CreateOrganizationParams): Promise<OrganizationResource | void> => {\n    const callback = () => this.clerkjs?.createOrganization(params);\n    if (this.clerkjs && this.loaded) {\n      return callback() as Promise<OrganizationResource>;\n    } else {\n      this.premountMethodCalls.set('createOrganization', callback);\n    }\n  };\n\n  getOrganization = async (organizationId: string): Promise<OrganizationResource | void> => {\n    const callback = () => this.clerkjs?.getOrganization(organizationId);\n    if (this.clerkjs && this.loaded) {\n      return callback() as Promise<OrganizationResource>;\n    } else {\n      this.premountMethodCalls.set('getOrganization', callback);\n    }\n  };\n\n  joinWaitlist = async (params: JoinWaitlistParams): Promise<WaitlistResource | void> => {\n    const callback = () => this.clerkjs?.joinWaitlist(params);\n    if (this.clerkjs && this.loaded) {\n      return callback() as Promise<WaitlistResource>;\n    } else {\n      this.premountMethodCalls.set('joinWaitlist', callback);\n    }\n  };\n\n  signOut = async (...args: Parameters<Clerk['signOut']>) => {\n    const callback = () => this.clerkjs?.signOut(...args);\n    if (this.clerkjs && this.loaded) {\n      return callback() as Promise<void>;\n    } else {\n      this.premountMethodCalls.set('signOut', callback);\n    }\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}